
12_timers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001628  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b4  080016e8  080016e8  000116e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800179c  0800179c  00020068  2**0
                  CONTENTS
  4 .ARM          00000000  0800179c  0800179c  00020068  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800179c  0800179c  00020068  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800179c  0800179c  0001179c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080017a0  080017a0  000117a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000068  20000000  080017a4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  20000068  0800180c  00020068  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000009c  0800180c  0002009c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020068  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001cea  00000000  00000000  00020090  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000009a3  00000000  00000000  00021d7a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000002b0  00000000  00000000  00022720  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000228  00000000  00000000  000229d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000019e1  00000000  00000000  00022bf8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003d4b  00000000  00000000  000245d9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00060c64  00000000  00000000  00028324  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00088f88  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000f7c  00000000  00000000  00088fd8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000068 	.word	0x20000068
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080016d0 	.word	0x080016d0

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	2000006c 	.word	0x2000006c
 8000104:	080016d0 	.word	0x080016d0

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			; (mov r8, r8)

08000234 <main>:
#define GPIO_A_EN	(1U<<17) //enable bit 17 in RCC AHB register for port A
#define PIN5		(1u<<5) //Pin 5 location in GPIO A Register
#define LED_PIN		PIN5

int main (void)
{
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0
		//Enable clock access to GPIOA
		RCC->AHBENR	|= GPIO_A_EN;
 8000238:	4b1a      	ldr	r3, [pc, #104]	; (80002a4 <main+0x70>)
 800023a:	695a      	ldr	r2, [r3, #20]
 800023c:	4b19      	ldr	r3, [pc, #100]	; (80002a4 <main+0x70>)
 800023e:	2180      	movs	r1, #128	; 0x80
 8000240:	0289      	lsls	r1, r1, #10
 8000242:	430a      	orrs	r2, r1
 8000244:	615a      	str	r2, [r3, #20]
		//Set PA5 as output pin
		GPIOA->MODER |= (1U<<10); //bitwise OR(|=)
 8000246:	2390      	movs	r3, #144	; 0x90
 8000248:	05db      	lsls	r3, r3, #23
 800024a:	681a      	ldr	r2, [r3, #0]
 800024c:	2390      	movs	r3, #144	; 0x90
 800024e:	05db      	lsls	r3, r3, #23
 8000250:	2180      	movs	r1, #128	; 0x80
 8000252:	00c9      	lsls	r1, r1, #3
 8000254:	430a      	orrs	r2, r1
 8000256:	601a      	str	r2, [r3, #0]
		GPIOA->MODER &= ~(1U<<11); //bitwise AND(&=), NOT(~)
 8000258:	2390      	movs	r3, #144	; 0x90
 800025a:	05db      	lsls	r3, r3, #23
 800025c:	681a      	ldr	r2, [r3, #0]
 800025e:	2390      	movs	r3, #144	; 0x90
 8000260:	05db      	lsls	r3, r3, #23
 8000262:	4911      	ldr	r1, [pc, #68]	; (80002a8 <main+0x74>)
 8000264:	400a      	ands	r2, r1
 8000266:	601a      	str	r2, [r3, #0]
		//Initialize UART
		uart2_rxtx_init();
 8000268:	f000 f90c 	bl	8000484 <uart2_rxtx_init>
		tim3_1hz_init();
 800026c:	f000 f8da 	bl	8000424 <tim3_1hz_init>
		while(1)
		{
				//wait for UIF
				while(!(TIM3->SR & SR_UIF)){}
 8000270:	46c0      	nop			; (mov r8, r8)
 8000272:	4b0e      	ldr	r3, [pc, #56]	; (80002ac <main+0x78>)
 8000274:	691b      	ldr	r3, [r3, #16]
 8000276:	2201      	movs	r2, #1
 8000278:	4013      	ands	r3, r2
 800027a:	d0fa      	beq.n	8000272 <main+0x3e>
				//clear uif
				TIM3->SR &= ~SR_UIF;
 800027c:	4b0b      	ldr	r3, [pc, #44]	; (80002ac <main+0x78>)
 800027e:	691a      	ldr	r2, [r3, #16]
 8000280:	4b0a      	ldr	r3, [pc, #40]	; (80002ac <main+0x78>)
 8000282:	2101      	movs	r1, #1
 8000284:	438a      	bics	r2, r1
 8000286:	611a      	str	r2, [r3, #16]
				printf("5 seconds has passed... \n\r");
 8000288:	4b09      	ldr	r3, [pc, #36]	; (80002b0 <main+0x7c>)
 800028a:	0018      	movs	r0, r3
 800028c:	f000 fa48 	bl	8000720 <iprintf>
				GPIOA->ODR	^= LED_PIN;
 8000290:	2390      	movs	r3, #144	; 0x90
 8000292:	05db      	lsls	r3, r3, #23
 8000294:	695a      	ldr	r2, [r3, #20]
 8000296:	2390      	movs	r3, #144	; 0x90
 8000298:	05db      	lsls	r3, r3, #23
 800029a:	2120      	movs	r1, #32
 800029c:	404a      	eors	r2, r1
 800029e:	615a      	str	r2, [r3, #20]
				while(!(TIM3->SR & SR_UIF)){}
 80002a0:	e7e6      	b.n	8000270 <main+0x3c>
 80002a2:	46c0      	nop			; (mov r8, r8)
 80002a4:	40021000 	.word	0x40021000
 80002a8:	fffff7ff 	.word	0xfffff7ff
 80002ac:	40000400 	.word	0x40000400
 80002b0:	080016e8 	.word	0x080016e8

080002b4 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 80002b4:	b580      	push	{r7, lr}
 80002b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 80002b8:	e7fe      	b.n	80002b8 <NMI_Handler+0x4>

080002ba <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 80002ba:	b580      	push	{r7, lr}
 80002bc:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80002be:	e7fe      	b.n	80002be <HardFault_Handler+0x4>

080002c0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 80002c4:	46c0      	nop			; (mov r8, r8)
 80002c6:	46bd      	mov	sp, r7
 80002c8:	bd80      	pop	{r7, pc}

080002ca <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80002ca:	b580      	push	{r7, lr}
 80002cc:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80002ce:	46c0      	nop			; (mov r8, r8)
 80002d0:	46bd      	mov	sp, r7
 80002d2:	bd80      	pop	{r7, pc}

080002d4 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80002d4:	b580      	push	{r7, lr}
 80002d6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80002d8:	f000 f9de 	bl	8000698 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80002dc:	46c0      	nop			; (mov r8, r8)
 80002de:	46bd      	mov	sp, r7
 80002e0:	bd80      	pop	{r7, pc}

080002e2 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002e2:	b580      	push	{r7, lr}
 80002e4:	b086      	sub	sp, #24
 80002e6:	af00      	add	r7, sp, #0
 80002e8:	60f8      	str	r0, [r7, #12]
 80002ea:	60b9      	str	r1, [r7, #8]
 80002ec:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002ee:	2300      	movs	r3, #0
 80002f0:	617b      	str	r3, [r7, #20]
 80002f2:	e00a      	b.n	800030a <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002f4:	e000      	b.n	80002f8 <_read+0x16>
 80002f6:	bf00      	nop
 80002f8:	0001      	movs	r1, r0
 80002fa:	68bb      	ldr	r3, [r7, #8]
 80002fc:	1c5a      	adds	r2, r3, #1
 80002fe:	60ba      	str	r2, [r7, #8]
 8000300:	b2ca      	uxtb	r2, r1
 8000302:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000304:	697b      	ldr	r3, [r7, #20]
 8000306:	3301      	adds	r3, #1
 8000308:	617b      	str	r3, [r7, #20]
 800030a:	697a      	ldr	r2, [r7, #20]
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	429a      	cmp	r2, r3
 8000310:	dbf0      	blt.n	80002f4 <_read+0x12>
  }

  return len;
 8000312:	687b      	ldr	r3, [r7, #4]
}
 8000314:	0018      	movs	r0, r3
 8000316:	46bd      	mov	sp, r7
 8000318:	b006      	add	sp, #24
 800031a:	bd80      	pop	{r7, pc}

0800031c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	b086      	sub	sp, #24
 8000320:	af00      	add	r7, sp, #0
 8000322:	60f8      	str	r0, [r7, #12]
 8000324:	60b9      	str	r1, [r7, #8]
 8000326:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000328:	2300      	movs	r3, #0
 800032a:	617b      	str	r3, [r7, #20]
 800032c:	e009      	b.n	8000342 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800032e:	68bb      	ldr	r3, [r7, #8]
 8000330:	1c5a      	adds	r2, r3, #1
 8000332:	60ba      	str	r2, [r7, #8]
 8000334:	781b      	ldrb	r3, [r3, #0]
 8000336:	0018      	movs	r0, r3
 8000338:	f000 f896 	bl	8000468 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800033c:	697b      	ldr	r3, [r7, #20]
 800033e:	3301      	adds	r3, #1
 8000340:	617b      	str	r3, [r7, #20]
 8000342:	697a      	ldr	r2, [r7, #20]
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	429a      	cmp	r2, r3
 8000348:	dbf1      	blt.n	800032e <_write+0x12>
  }
  return len;
 800034a:	687b      	ldr	r3, [r7, #4]
}
 800034c:	0018      	movs	r0, r3
 800034e:	46bd      	mov	sp, r7
 8000350:	b006      	add	sp, #24
 8000352:	bd80      	pop	{r7, pc}

08000354 <_close>:

int _close(int file)
{
 8000354:	b580      	push	{r7, lr}
 8000356:	b082      	sub	sp, #8
 8000358:	af00      	add	r7, sp, #0
 800035a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800035c:	2301      	movs	r3, #1
 800035e:	425b      	negs	r3, r3
}
 8000360:	0018      	movs	r0, r3
 8000362:	46bd      	mov	sp, r7
 8000364:	b002      	add	sp, #8
 8000366:	bd80      	pop	{r7, pc}

08000368 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000368:	b580      	push	{r7, lr}
 800036a:	b082      	sub	sp, #8
 800036c:	af00      	add	r7, sp, #0
 800036e:	6078      	str	r0, [r7, #4]
 8000370:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000372:	683b      	ldr	r3, [r7, #0]
 8000374:	2280      	movs	r2, #128	; 0x80
 8000376:	0192      	lsls	r2, r2, #6
 8000378:	605a      	str	r2, [r3, #4]
  return 0;
 800037a:	2300      	movs	r3, #0
}
 800037c:	0018      	movs	r0, r3
 800037e:	46bd      	mov	sp, r7
 8000380:	b002      	add	sp, #8
 8000382:	bd80      	pop	{r7, pc}

08000384 <_isatty>:

int _isatty(int file)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	b082      	sub	sp, #8
 8000388:	af00      	add	r7, sp, #0
 800038a:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800038c:	2301      	movs	r3, #1
}
 800038e:	0018      	movs	r0, r3
 8000390:	46bd      	mov	sp, r7
 8000392:	b002      	add	sp, #8
 8000394:	bd80      	pop	{r7, pc}

08000396 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000396:	b580      	push	{r7, lr}
 8000398:	b084      	sub	sp, #16
 800039a:	af00      	add	r7, sp, #0
 800039c:	60f8      	str	r0, [r7, #12]
 800039e:	60b9      	str	r1, [r7, #8]
 80003a0:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80003a2:	2300      	movs	r3, #0
}
 80003a4:	0018      	movs	r0, r3
 80003a6:	46bd      	mov	sp, r7
 80003a8:	b004      	add	sp, #16
 80003aa:	bd80      	pop	{r7, pc}

080003ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003ac:	b580      	push	{r7, lr}
 80003ae:	b086      	sub	sp, #24
 80003b0:	af00      	add	r7, sp, #0
 80003b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003b4:	4a14      	ldr	r2, [pc, #80]	; (8000408 <_sbrk+0x5c>)
 80003b6:	4b15      	ldr	r3, [pc, #84]	; (800040c <_sbrk+0x60>)
 80003b8:	1ad3      	subs	r3, r2, r3
 80003ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003bc:	697b      	ldr	r3, [r7, #20]
 80003be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003c0:	4b13      	ldr	r3, [pc, #76]	; (8000410 <_sbrk+0x64>)
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	2b00      	cmp	r3, #0
 80003c6:	d102      	bne.n	80003ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003c8:	4b11      	ldr	r3, [pc, #68]	; (8000410 <_sbrk+0x64>)
 80003ca:	4a12      	ldr	r2, [pc, #72]	; (8000414 <_sbrk+0x68>)
 80003cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003ce:	4b10      	ldr	r3, [pc, #64]	; (8000410 <_sbrk+0x64>)
 80003d0:	681a      	ldr	r2, [r3, #0]
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	18d3      	adds	r3, r2, r3
 80003d6:	693a      	ldr	r2, [r7, #16]
 80003d8:	429a      	cmp	r2, r3
 80003da:	d207      	bcs.n	80003ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003dc:	f000 f96e 	bl	80006bc <__errno>
 80003e0:	0003      	movs	r3, r0
 80003e2:	220c      	movs	r2, #12
 80003e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003e6:	2301      	movs	r3, #1
 80003e8:	425b      	negs	r3, r3
 80003ea:	e009      	b.n	8000400 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003ec:	4b08      	ldr	r3, [pc, #32]	; (8000410 <_sbrk+0x64>)
 80003ee:	681b      	ldr	r3, [r3, #0]
 80003f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003f2:	4b07      	ldr	r3, [pc, #28]	; (8000410 <_sbrk+0x64>)
 80003f4:	681a      	ldr	r2, [r3, #0]
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	18d2      	adds	r2, r2, r3
 80003fa:	4b05      	ldr	r3, [pc, #20]	; (8000410 <_sbrk+0x64>)
 80003fc:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 80003fe:	68fb      	ldr	r3, [r7, #12]
}
 8000400:	0018      	movs	r0, r3
 8000402:	46bd      	mov	sp, r7
 8000404:	b006      	add	sp, #24
 8000406:	bd80      	pop	{r7, pc}
 8000408:	20004000 	.word	0x20004000
 800040c:	00000400 	.word	0x00000400
 8000410:	20000084 	.word	0x20000084
 8000414:	200000a0 	.word	0x200000a0

08000418 <SystemInit>:
  * @brief  Setup the microcontroller system
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 8000418:	b580      	push	{r7, lr}
 800041a:	af00      	add	r7, sp, #0
                         before branch to main program. This call is made inside
                         the "startup_stm32f0xx.s" file.
                         User can setups the default system clock (System clock source, PLL Multiplier
                         and Divider factors, AHB/APBx prescalers and Flash settings).
   */
}
 800041c:	46c0      	nop			; (mov r8, r8)
 800041e:	46bd      	mov	sp, r7
 8000420:	bd80      	pop	{r7, pc}
	...

08000424 <tim3_1hz_init>:
 *
 * Update Event = 1Hz or occurs every one second
 *
 */
void tim3_1hz_init(void)
{
 8000424:	b580      	push	{r7, lr}
 8000426:	af00      	add	r7, sp, #0
	//Enable RCC to Timer 3
	RCC->APB1ENR |= TIM3EN;
 8000428:	4b0b      	ldr	r3, [pc, #44]	; (8000458 <tim3_1hz_init+0x34>)
 800042a:	69da      	ldr	r2, [r3, #28]
 800042c:	4b0a      	ldr	r3, [pc, #40]	; (8000458 <tim3_1hz_init+0x34>)
 800042e:	2102      	movs	r1, #2
 8000430:	430a      	orrs	r2, r1
 8000432:	61da      	str	r2, [r3, #28]
	//Set Pre-scaler Value
	TIM3->PSC = 800 - 1; // 8,000,0000/800 = 10,000
 8000434:	4b09      	ldr	r3, [pc, #36]	; (800045c <tim3_1hz_init+0x38>)
 8000436:	4a0a      	ldr	r2, [pc, #40]	; (8000460 <tim3_1hz_init+0x3c>)
 8000438:	629a      	str	r2, [r3, #40]	; 0x28
	//Set Auto-Reload Value (Period)
	TIM3->ARR = 50000 - 1;
 800043a:	4b08      	ldr	r3, [pc, #32]	; (800045c <tim3_1hz_init+0x38>)
 800043c:	4a09      	ldr	r2, [pc, #36]	; (8000464 <tim3_1hz_init+0x40>)
 800043e:	62da      	str	r2, [r3, #44]	; 0x2c
	//Clear Counter
	TIM3->CNT = 0;
 8000440:	4b06      	ldr	r3, [pc, #24]	; (800045c <tim3_1hz_init+0x38>)
 8000442:	2200      	movs	r2, #0
 8000444:	625a      	str	r2, [r3, #36]	; 0x24
	//Enable Timer
	TIM3->CR1 |= CR1_CEN;
 8000446:	4b05      	ldr	r3, [pc, #20]	; (800045c <tim3_1hz_init+0x38>)
 8000448:	681a      	ldr	r2, [r3, #0]
 800044a:	4b04      	ldr	r3, [pc, #16]	; (800045c <tim3_1hz_init+0x38>)
 800044c:	2101      	movs	r1, #1
 800044e:	430a      	orrs	r2, r1
 8000450:	601a      	str	r2, [r3, #0]

}
 8000452:	46c0      	nop			; (mov r8, r8)
 8000454:	46bd      	mov	sp, r7
 8000456:	bd80      	pop	{r7, pc}
 8000458:	40021000 	.word	0x40021000
 800045c:	40000400 	.word	0x40000400
 8000460:	0000031f 	.word	0x0000031f
 8000464:	0000c34f 	.word	0x0000c34f

08000468 <__io_putchar>:

void uart2_write(int ch);


int __io_putchar(int ch) //for redirecting printf
{
 8000468:	b580      	push	{r7, lr}
 800046a:	b082      	sub	sp, #8
 800046c:	af00      	add	r7, sp, #0
 800046e:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 8000470:	687b      	ldr	r3, [r7, #4]
 8000472:	0018      	movs	r0, r3
 8000474:	f000 f8a6 	bl	80005c4 <uart2_write>
	return ch;
 8000478:	687b      	ldr	r3, [r7, #4]
}
 800047a:	0018      	movs	r0, r3
 800047c:	46bd      	mov	sp, r7
 800047e:	b002      	add	sp, #8
 8000480:	bd80      	pop	{r7, pc}
	...

08000484 <uart2_rxtx_init>:

void uart2_rxtx_init(void)
{
 8000484:	b580      	push	{r7, lr}
 8000486:	af00      	add	r7, sp, #0
	/*Configure UART2 GPIO pins*/
	//Enable clock access to GPIOA
	RCC->AHBENR	|= GPIO_A_EN;
 8000488:	4b45      	ldr	r3, [pc, #276]	; (80005a0 <uart2_rxtx_init+0x11c>)
 800048a:	695a      	ldr	r2, [r3, #20]
 800048c:	4b44      	ldr	r3, [pc, #272]	; (80005a0 <uart2_rxtx_init+0x11c>)
 800048e:	2180      	movs	r1, #128	; 0x80
 8000490:	0289      	lsls	r1, r1, #10
 8000492:	430a      	orrs	r2, r1
 8000494:	615a      	str	r2, [r3, #20]
	//set TX pin (PA2) mode to alternate function mode
	GPIOA->MODER &= ~(1U<<4); //bitwise AND(&=), NOT(~) to set it to 0
 8000496:	2390      	movs	r3, #144	; 0x90
 8000498:	05db      	lsls	r3, r3, #23
 800049a:	681a      	ldr	r2, [r3, #0]
 800049c:	2390      	movs	r3, #144	; 0x90
 800049e:	05db      	lsls	r3, r3, #23
 80004a0:	2110      	movs	r1, #16
 80004a2:	438a      	bics	r2, r1
 80004a4:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<5); //bitwise OR(|=) to set it to 1
 80004a6:	2390      	movs	r3, #144	; 0x90
 80004a8:	05db      	lsls	r3, r3, #23
 80004aa:	681a      	ldr	r2, [r3, #0]
 80004ac:	2390      	movs	r3, #144	; 0x90
 80004ae:	05db      	lsls	r3, r3, #23
 80004b0:	2120      	movs	r1, #32
 80004b2:	430a      	orrs	r2, r1
 80004b4:	601a      	str	r2, [r3, #0]
	//set RX pin (PA3) mode to alternate function mode
	GPIOA->MODER &= ~(1U<<6); //bitwise AND(&=), NOT(~) to set it to 0
 80004b6:	2390      	movs	r3, #144	; 0x90
 80004b8:	05db      	lsls	r3, r3, #23
 80004ba:	681a      	ldr	r2, [r3, #0]
 80004bc:	2390      	movs	r3, #144	; 0x90
 80004be:	05db      	lsls	r3, r3, #23
 80004c0:	2140      	movs	r1, #64	; 0x40
 80004c2:	438a      	bics	r2, r1
 80004c4:	601a      	str	r2, [r3, #0]
	GPIOA->MODER |= (1U<<7); //bitwise OR(|=) to set it to 1
 80004c6:	2390      	movs	r3, #144	; 0x90
 80004c8:	05db      	lsls	r3, r3, #23
 80004ca:	681a      	ldr	r2, [r3, #0]
 80004cc:	2390      	movs	r3, #144	; 0x90
 80004ce:	05db      	lsls	r3, r3, #23
 80004d0:	2180      	movs	r1, #128	; 0x80
 80004d2:	430a      	orrs	r2, r1
 80004d4:	601a      	str	r2, [r3, #0]
	//set PA2 alternate function type to UART2_TX (AF1) 0001:AF1 (index 0 for AFRL index 1 for AFRH)
	GPIOA->AFR[0] |= (1U<<8); //bitwise OR(|=) to set it to 1
 80004d6:	2390      	movs	r3, #144	; 0x90
 80004d8:	05db      	lsls	r3, r3, #23
 80004da:	6a1a      	ldr	r2, [r3, #32]
 80004dc:	2390      	movs	r3, #144	; 0x90
 80004de:	05db      	lsls	r3, r3, #23
 80004e0:	2180      	movs	r1, #128	; 0x80
 80004e2:	0049      	lsls	r1, r1, #1
 80004e4:	430a      	orrs	r2, r1
 80004e6:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1U<<9); //bitwise AND(&=), NOT(~) to set it to 0
 80004e8:	2390      	movs	r3, #144	; 0x90
 80004ea:	05db      	lsls	r3, r3, #23
 80004ec:	6a1a      	ldr	r2, [r3, #32]
 80004ee:	2390      	movs	r3, #144	; 0x90
 80004f0:	05db      	lsls	r3, r3, #23
 80004f2:	492c      	ldr	r1, [pc, #176]	; (80005a4 <uart2_rxtx_init+0x120>)
 80004f4:	400a      	ands	r2, r1
 80004f6:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1U<<10); //bitwise AND(&=), NOT(~) to set it to 0
 80004f8:	2390      	movs	r3, #144	; 0x90
 80004fa:	05db      	lsls	r3, r3, #23
 80004fc:	6a1a      	ldr	r2, [r3, #32]
 80004fe:	2390      	movs	r3, #144	; 0x90
 8000500:	05db      	lsls	r3, r3, #23
 8000502:	4929      	ldr	r1, [pc, #164]	; (80005a8 <uart2_rxtx_init+0x124>)
 8000504:	400a      	ands	r2, r1
 8000506:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1U<<11); //bitwise AND(&=), NOT(~) to set it to 0
 8000508:	2390      	movs	r3, #144	; 0x90
 800050a:	05db      	lsls	r3, r3, #23
 800050c:	6a1a      	ldr	r2, [r3, #32]
 800050e:	2390      	movs	r3, #144	; 0x90
 8000510:	05db      	lsls	r3, r3, #23
 8000512:	4926      	ldr	r1, [pc, #152]	; (80005ac <uart2_rxtx_init+0x128>)
 8000514:	400a      	ands	r2, r1
 8000516:	621a      	str	r2, [r3, #32]
	//set PA3 alternate function type to UART2_RX (AF1) 0001:AF1 (index 0 for AFRL index 1 for AFRH)
	GPIOA->AFR[0] |= (1U<<12); //bitwise OR(|=) to set it to 1
 8000518:	2390      	movs	r3, #144	; 0x90
 800051a:	05db      	lsls	r3, r3, #23
 800051c:	6a1a      	ldr	r2, [r3, #32]
 800051e:	2390      	movs	r3, #144	; 0x90
 8000520:	05db      	lsls	r3, r3, #23
 8000522:	2180      	movs	r1, #128	; 0x80
 8000524:	0149      	lsls	r1, r1, #5
 8000526:	430a      	orrs	r2, r1
 8000528:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1U<<13); //bitwise AND(&=), NOT(~) to set it to 0
 800052a:	2390      	movs	r3, #144	; 0x90
 800052c:	05db      	lsls	r3, r3, #23
 800052e:	6a1a      	ldr	r2, [r3, #32]
 8000530:	2390      	movs	r3, #144	; 0x90
 8000532:	05db      	lsls	r3, r3, #23
 8000534:	491e      	ldr	r1, [pc, #120]	; (80005b0 <uart2_rxtx_init+0x12c>)
 8000536:	400a      	ands	r2, r1
 8000538:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1U<<14); //bitwise AND(&=), NOT(~) to set it to 0
 800053a:	2390      	movs	r3, #144	; 0x90
 800053c:	05db      	lsls	r3, r3, #23
 800053e:	6a1a      	ldr	r2, [r3, #32]
 8000540:	2390      	movs	r3, #144	; 0x90
 8000542:	05db      	lsls	r3, r3, #23
 8000544:	491b      	ldr	r1, [pc, #108]	; (80005b4 <uart2_rxtx_init+0x130>)
 8000546:	400a      	ands	r2, r1
 8000548:	621a      	str	r2, [r3, #32]
	GPIOA->AFR[0] &= ~(1U<<15); //bitwise AND(&=), NOT(~) to set it to 0
 800054a:	2390      	movs	r3, #144	; 0x90
 800054c:	05db      	lsls	r3, r3, #23
 800054e:	6a1a      	ldr	r2, [r3, #32]
 8000550:	2390      	movs	r3, #144	; 0x90
 8000552:	05db      	lsls	r3, r3, #23
 8000554:	4918      	ldr	r1, [pc, #96]	; (80005b8 <uart2_rxtx_init+0x134>)
 8000556:	400a      	ands	r2, r1
 8000558:	621a      	str	r2, [r3, #32]
	/*Configure UART GPIO pin*/
	//Enable clock access to UART2
	RCC->APB1ENR |= UART2EN;
 800055a:	4b11      	ldr	r3, [pc, #68]	; (80005a0 <uart2_rxtx_init+0x11c>)
 800055c:	69da      	ldr	r2, [r3, #28]
 800055e:	4b10      	ldr	r3, [pc, #64]	; (80005a0 <uart2_rxtx_init+0x11c>)
 8000560:	2180      	movs	r1, #128	; 0x80
 8000562:	0289      	lsls	r1, r1, #10
 8000564:	430a      	orrs	r2, r1
 8000566:	61da      	str	r2, [r3, #28]
	//Configure UART2 baud-rate
	uart_set_baudrate(USART2,APB1_CLK,UART_BAUDRATE);
 8000568:	2396      	movs	r3, #150	; 0x96
 800056a:	019b      	lsls	r3, r3, #6
 800056c:	4913      	ldr	r1, [pc, #76]	; (80005bc <uart2_rxtx_init+0x138>)
 800056e:	4814      	ldr	r0, [pc, #80]	; (80005c0 <uart2_rxtx_init+0x13c>)
 8000570:	001a      	movs	r2, r3
 8000572:	f000 f83f 	bl	80005f4 <uart_set_baudrate>
	//Configure the transfer direction
	USART2->CR1 |= CR1_TE;
 8000576:	4b12      	ldr	r3, [pc, #72]	; (80005c0 <uart2_rxtx_init+0x13c>)
 8000578:	681a      	ldr	r2, [r3, #0]
 800057a:	4b11      	ldr	r3, [pc, #68]	; (80005c0 <uart2_rxtx_init+0x13c>)
 800057c:	2108      	movs	r1, #8
 800057e:	430a      	orrs	r2, r1
 8000580:	601a      	str	r2, [r3, #0]
	USART2->CR1 |= CR1_RE;
 8000582:	4b0f      	ldr	r3, [pc, #60]	; (80005c0 <uart2_rxtx_init+0x13c>)
 8000584:	681a      	ldr	r2, [r3, #0]
 8000586:	4b0e      	ldr	r3, [pc, #56]	; (80005c0 <uart2_rxtx_init+0x13c>)
 8000588:	2104      	movs	r1, #4
 800058a:	430a      	orrs	r2, r1
 800058c:	601a      	str	r2, [r3, #0]
	//Enable UART module in control register 1
	USART2->CR1 |= CR1_UART_EN;
 800058e:	4b0c      	ldr	r3, [pc, #48]	; (80005c0 <uart2_rxtx_init+0x13c>)
 8000590:	681a      	ldr	r2, [r3, #0]
 8000592:	4b0b      	ldr	r3, [pc, #44]	; (80005c0 <uart2_rxtx_init+0x13c>)
 8000594:	2101      	movs	r1, #1
 8000596:	430a      	orrs	r2, r1
 8000598:	601a      	str	r2, [r3, #0]
}
 800059a:	46c0      	nop			; (mov r8, r8)
 800059c:	46bd      	mov	sp, r7
 800059e:	bd80      	pop	{r7, pc}
 80005a0:	40021000 	.word	0x40021000
 80005a4:	fffffdff 	.word	0xfffffdff
 80005a8:	fffffbff 	.word	0xfffffbff
 80005ac:	fffff7ff 	.word	0xfffff7ff
 80005b0:	ffffdfff 	.word	0xffffdfff
 80005b4:	ffffbfff 	.word	0xffffbfff
 80005b8:	ffff7fff 	.word	0xffff7fff
 80005bc:	007a1200 	.word	0x007a1200
 80005c0:	40004400 	.word	0x40004400

080005c4 <uart2_write>:

	/*read data*/
	return USART2->RDR;
}
void uart2_write(int ch)
{
 80005c4:	b580      	push	{r7, lr}
 80005c6:	b082      	sub	sp, #8
 80005c8:	af00      	add	r7, sp, #0
 80005ca:	6078      	str	r0, [r7, #4]
	/*Make sure the transmit data register is empty*/
	while(!(USART2->ISR & SR_TXE)){}
 80005cc:	46c0      	nop			; (mov r8, r8)
 80005ce:	4b08      	ldr	r3, [pc, #32]	; (80005f0 <uart2_write+0x2c>)
 80005d0:	69db      	ldr	r3, [r3, #28]
 80005d2:	2280      	movs	r2, #128	; 0x80
 80005d4:	4013      	ands	r3, r2
 80005d6:	d0fa      	beq.n	80005ce <uart2_write+0xa>
	/*Write to transmit data register*/
	USART2->TDR = (ch & 0xFF); //we perform AND operation because we want to transmit eight bits
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	b29b      	uxth	r3, r3
 80005dc:	4a04      	ldr	r2, [pc, #16]	; (80005f0 <uart2_write+0x2c>)
 80005de:	21ff      	movs	r1, #255	; 0xff
 80005e0:	400b      	ands	r3, r1
 80005e2:	b29b      	uxth	r3, r3
 80005e4:	8513      	strh	r3, [r2, #40]	; 0x28
/*“& 0xff” effectively masks the variable so it leaves only the value in the last 8 bits, and ignores all the rest of the bits*/
}
 80005e6:	46c0      	nop			; (mov r8, r8)
 80005e8:	46bd      	mov	sp, r7
 80005ea:	b002      	add	sp, #8
 80005ec:	bd80      	pop	{r7, pc}
 80005ee:	46c0      	nop			; (mov r8, r8)
 80005f0:	40004400 	.word	0x40004400

080005f4 <uart_set_baudrate>:

static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t Baudrate)
{
 80005f4:	b580      	push	{r7, lr}
 80005f6:	b084      	sub	sp, #16
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	60f8      	str	r0, [r7, #12]
 80005fc:	60b9      	str	r1, [r7, #8]
 80005fe:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_BD(PeriphClk, Baudrate);
 8000600:	687a      	ldr	r2, [r7, #4]
 8000602:	68bb      	ldr	r3, [r7, #8]
 8000604:	0011      	movs	r1, r2
 8000606:	0018      	movs	r0, r3
 8000608:	f000 f808 	bl	800061c <compute_uart_BD>
 800060c:	0003      	movs	r3, r0
 800060e:	001a      	movs	r2, r3
 8000610:	68fb      	ldr	r3, [r7, #12]
 8000612:	60da      	str	r2, [r3, #12]
}
 8000614:	46c0      	nop			; (mov r8, r8)
 8000616:	46bd      	mov	sp, r7
 8000618:	b004      	add	sp, #16
 800061a:	bd80      	pop	{r7, pc}

0800061c <compute_uart_BD>:
static uint16_t compute_uart_BD(uint32_t PeriphClk, uint32_t Baudrate)
{
 800061c:	b580      	push	{r7, lr}
 800061e:	b082      	sub	sp, #8
 8000620:	af00      	add	r7, sp, #0
 8000622:	6078      	str	r0, [r7, #4]
 8000624:	6039      	str	r1, [r7, #0]
	return ((PeriphClk + (Baudrate/2U))/Baudrate);
 8000626:	683b      	ldr	r3, [r7, #0]
 8000628:	085a      	lsrs	r2, r3, #1
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	18d3      	adds	r3, r2, r3
 800062e:	6839      	ldr	r1, [r7, #0]
 8000630:	0018      	movs	r0, r3
 8000632:	f7ff fd73 	bl	800011c <__udivsi3>
 8000636:	0003      	movs	r3, r0
 8000638:	b29b      	uxth	r3, r3
}
 800063a:	0018      	movs	r0, r3
 800063c:	46bd      	mov	sp, r7
 800063e:	b002      	add	sp, #8
 8000640:	bd80      	pop	{r7, pc}
	...

08000644 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000644:	480d      	ldr	r0, [pc, #52]	; (800067c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000646:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000648:	480d      	ldr	r0, [pc, #52]	; (8000680 <LoopForever+0x6>)
  ldr r1, =_edata
 800064a:	490e      	ldr	r1, [pc, #56]	; (8000684 <LoopForever+0xa>)
  ldr r2, =_sidata
 800064c:	4a0e      	ldr	r2, [pc, #56]	; (8000688 <LoopForever+0xe>)
  movs r3, #0
 800064e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000650:	e002      	b.n	8000658 <LoopCopyDataInit>

08000652 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000652:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000654:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000656:	3304      	adds	r3, #4

08000658 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000658:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800065a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800065c:	d3f9      	bcc.n	8000652 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800065e:	4a0b      	ldr	r2, [pc, #44]	; (800068c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000660:	4c0b      	ldr	r4, [pc, #44]	; (8000690 <LoopForever+0x16>)
  movs r3, #0
 8000662:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000664:	e001      	b.n	800066a <LoopFillZerobss>

08000666 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000666:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000668:	3204      	adds	r2, #4

0800066a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800066a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800066c:	d3fb      	bcc.n	8000666 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 800066e:	f7ff fed3 	bl	8000418 <SystemInit>
/* Call static constructors */
  bl __libc_init_array
 8000672:	f000 f829 	bl	80006c8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000676:	f7ff fddd 	bl	8000234 <main>

0800067a <LoopForever>:

LoopForever:
    b LoopForever
 800067a:	e7fe      	b.n	800067a <LoopForever>
  ldr   r0, =_estack
 800067c:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8000680:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000684:	20000068 	.word	0x20000068
  ldr r2, =_sidata
 8000688:	080017a4 	.word	0x080017a4
  ldr r2, =_sbss
 800068c:	20000068 	.word	0x20000068
  ldr r4, =_ebss
 8000690:	2000009c 	.word	0x2000009c

08000694 <ADC1_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000694:	e7fe      	b.n	8000694 <ADC1_IRQHandler>
	...

08000698 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8000698:	b580      	push	{r7, lr}
 800069a:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 800069c:	4b05      	ldr	r3, [pc, #20]	; (80006b4 <HAL_IncTick+0x1c>)
 800069e:	781b      	ldrb	r3, [r3, #0]
 80006a0:	001a      	movs	r2, r3
 80006a2:	4b05      	ldr	r3, [pc, #20]	; (80006b8 <HAL_IncTick+0x20>)
 80006a4:	681b      	ldr	r3, [r3, #0]
 80006a6:	18d2      	adds	r2, r2, r3
 80006a8:	4b03      	ldr	r3, [pc, #12]	; (80006b8 <HAL_IncTick+0x20>)
 80006aa:	601a      	str	r2, [r3, #0]
}
 80006ac:	46c0      	nop			; (mov r8, r8)
 80006ae:	46bd      	mov	sp, r7
 80006b0:	bd80      	pop	{r7, pc}
 80006b2:	46c0      	nop			; (mov r8, r8)
 80006b4:	20000000 	.word	0x20000000
 80006b8:	20000088 	.word	0x20000088

080006bc <__errno>:
 80006bc:	4b01      	ldr	r3, [pc, #4]	; (80006c4 <__errno+0x8>)
 80006be:	6818      	ldr	r0, [r3, #0]
 80006c0:	4770      	bx	lr
 80006c2:	46c0      	nop			; (mov r8, r8)
 80006c4:	20000004 	.word	0x20000004

080006c8 <__libc_init_array>:
 80006c8:	b570      	push	{r4, r5, r6, lr}
 80006ca:	2600      	movs	r6, #0
 80006cc:	4d0c      	ldr	r5, [pc, #48]	; (8000700 <__libc_init_array+0x38>)
 80006ce:	4c0d      	ldr	r4, [pc, #52]	; (8000704 <__libc_init_array+0x3c>)
 80006d0:	1b64      	subs	r4, r4, r5
 80006d2:	10a4      	asrs	r4, r4, #2
 80006d4:	42a6      	cmp	r6, r4
 80006d6:	d109      	bne.n	80006ec <__libc_init_array+0x24>
 80006d8:	2600      	movs	r6, #0
 80006da:	f000 fff9 	bl	80016d0 <_init>
 80006de:	4d0a      	ldr	r5, [pc, #40]	; (8000708 <__libc_init_array+0x40>)
 80006e0:	4c0a      	ldr	r4, [pc, #40]	; (800070c <__libc_init_array+0x44>)
 80006e2:	1b64      	subs	r4, r4, r5
 80006e4:	10a4      	asrs	r4, r4, #2
 80006e6:	42a6      	cmp	r6, r4
 80006e8:	d105      	bne.n	80006f6 <__libc_init_array+0x2e>
 80006ea:	bd70      	pop	{r4, r5, r6, pc}
 80006ec:	00b3      	lsls	r3, r6, #2
 80006ee:	58eb      	ldr	r3, [r5, r3]
 80006f0:	4798      	blx	r3
 80006f2:	3601      	adds	r6, #1
 80006f4:	e7ee      	b.n	80006d4 <__libc_init_array+0xc>
 80006f6:	00b3      	lsls	r3, r6, #2
 80006f8:	58eb      	ldr	r3, [r5, r3]
 80006fa:	4798      	blx	r3
 80006fc:	3601      	adds	r6, #1
 80006fe:	e7f2      	b.n	80006e6 <__libc_init_array+0x1e>
 8000700:	0800179c 	.word	0x0800179c
 8000704:	0800179c 	.word	0x0800179c
 8000708:	0800179c 	.word	0x0800179c
 800070c:	080017a0 	.word	0x080017a0

08000710 <memset>:
 8000710:	0003      	movs	r3, r0
 8000712:	1882      	adds	r2, r0, r2
 8000714:	4293      	cmp	r3, r2
 8000716:	d100      	bne.n	800071a <memset+0xa>
 8000718:	4770      	bx	lr
 800071a:	7019      	strb	r1, [r3, #0]
 800071c:	3301      	adds	r3, #1
 800071e:	e7f9      	b.n	8000714 <memset+0x4>

08000720 <iprintf>:
 8000720:	b40f      	push	{r0, r1, r2, r3}
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <iprintf+0x30>)
 8000724:	b513      	push	{r0, r1, r4, lr}
 8000726:	681c      	ldr	r4, [r3, #0]
 8000728:	2c00      	cmp	r4, #0
 800072a:	d005      	beq.n	8000738 <iprintf+0x18>
 800072c:	69a3      	ldr	r3, [r4, #24]
 800072e:	2b00      	cmp	r3, #0
 8000730:	d102      	bne.n	8000738 <iprintf+0x18>
 8000732:	0020      	movs	r0, r4
 8000734:	f000 f870 	bl	8000818 <__sinit>
 8000738:	ab05      	add	r3, sp, #20
 800073a:	0020      	movs	r0, r4
 800073c:	9a04      	ldr	r2, [sp, #16]
 800073e:	68a1      	ldr	r1, [r4, #8]
 8000740:	9301      	str	r3, [sp, #4]
 8000742:	f000 f9cd 	bl	8000ae0 <_vfiprintf_r>
 8000746:	bc16      	pop	{r1, r2, r4}
 8000748:	bc08      	pop	{r3}
 800074a:	b004      	add	sp, #16
 800074c:	4718      	bx	r3
 800074e:	46c0      	nop			; (mov r8, r8)
 8000750:	20000004 	.word	0x20000004

08000754 <std>:
 8000754:	2300      	movs	r3, #0
 8000756:	b510      	push	{r4, lr}
 8000758:	0004      	movs	r4, r0
 800075a:	6003      	str	r3, [r0, #0]
 800075c:	6043      	str	r3, [r0, #4]
 800075e:	6083      	str	r3, [r0, #8]
 8000760:	8181      	strh	r1, [r0, #12]
 8000762:	6643      	str	r3, [r0, #100]	; 0x64
 8000764:	0019      	movs	r1, r3
 8000766:	81c2      	strh	r2, [r0, #14]
 8000768:	6103      	str	r3, [r0, #16]
 800076a:	6143      	str	r3, [r0, #20]
 800076c:	6183      	str	r3, [r0, #24]
 800076e:	2208      	movs	r2, #8
 8000770:	305c      	adds	r0, #92	; 0x5c
 8000772:	f7ff ffcd 	bl	8000710 <memset>
 8000776:	4b05      	ldr	r3, [pc, #20]	; (800078c <std+0x38>)
 8000778:	6224      	str	r4, [r4, #32]
 800077a:	6263      	str	r3, [r4, #36]	; 0x24
 800077c:	4b04      	ldr	r3, [pc, #16]	; (8000790 <std+0x3c>)
 800077e:	62a3      	str	r3, [r4, #40]	; 0x28
 8000780:	4b04      	ldr	r3, [pc, #16]	; (8000794 <std+0x40>)
 8000782:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000784:	4b04      	ldr	r3, [pc, #16]	; (8000798 <std+0x44>)
 8000786:	6323      	str	r3, [r4, #48]	; 0x30
 8000788:	bd10      	pop	{r4, pc}
 800078a:	46c0      	nop			; (mov r8, r8)
 800078c:	0800107d 	.word	0x0800107d
 8000790:	080010a5 	.word	0x080010a5
 8000794:	080010dd 	.word	0x080010dd
 8000798:	08001109 	.word	0x08001109

0800079c <_cleanup_r>:
 800079c:	b510      	push	{r4, lr}
 800079e:	4902      	ldr	r1, [pc, #8]	; (80007a8 <_cleanup_r+0xc>)
 80007a0:	f000 f8ba 	bl	8000918 <_fwalk_reent>
 80007a4:	bd10      	pop	{r4, pc}
 80007a6:	46c0      	nop			; (mov r8, r8)
 80007a8:	08001415 	.word	0x08001415

080007ac <__sfmoreglue>:
 80007ac:	b570      	push	{r4, r5, r6, lr}
 80007ae:	2568      	movs	r5, #104	; 0x68
 80007b0:	1e4a      	subs	r2, r1, #1
 80007b2:	4355      	muls	r5, r2
 80007b4:	000e      	movs	r6, r1
 80007b6:	0029      	movs	r1, r5
 80007b8:	3174      	adds	r1, #116	; 0x74
 80007ba:	f000 f8f3 	bl	80009a4 <_malloc_r>
 80007be:	1e04      	subs	r4, r0, #0
 80007c0:	d008      	beq.n	80007d4 <__sfmoreglue+0x28>
 80007c2:	2100      	movs	r1, #0
 80007c4:	002a      	movs	r2, r5
 80007c6:	6001      	str	r1, [r0, #0]
 80007c8:	6046      	str	r6, [r0, #4]
 80007ca:	300c      	adds	r0, #12
 80007cc:	60a0      	str	r0, [r4, #8]
 80007ce:	3268      	adds	r2, #104	; 0x68
 80007d0:	f7ff ff9e 	bl	8000710 <memset>
 80007d4:	0020      	movs	r0, r4
 80007d6:	bd70      	pop	{r4, r5, r6, pc}

080007d8 <__sfp_lock_acquire>:
 80007d8:	b510      	push	{r4, lr}
 80007da:	4802      	ldr	r0, [pc, #8]	; (80007e4 <__sfp_lock_acquire+0xc>)
 80007dc:	f000 f8bd 	bl	800095a <__retarget_lock_acquire_recursive>
 80007e0:	bd10      	pop	{r4, pc}
 80007e2:	46c0      	nop			; (mov r8, r8)
 80007e4:	2000008d 	.word	0x2000008d

080007e8 <__sfp_lock_release>:
 80007e8:	b510      	push	{r4, lr}
 80007ea:	4802      	ldr	r0, [pc, #8]	; (80007f4 <__sfp_lock_release+0xc>)
 80007ec:	f000 f8b6 	bl	800095c <__retarget_lock_release_recursive>
 80007f0:	bd10      	pop	{r4, pc}
 80007f2:	46c0      	nop			; (mov r8, r8)
 80007f4:	2000008d 	.word	0x2000008d

080007f8 <__sinit_lock_acquire>:
 80007f8:	b510      	push	{r4, lr}
 80007fa:	4802      	ldr	r0, [pc, #8]	; (8000804 <__sinit_lock_acquire+0xc>)
 80007fc:	f000 f8ad 	bl	800095a <__retarget_lock_acquire_recursive>
 8000800:	bd10      	pop	{r4, pc}
 8000802:	46c0      	nop			; (mov r8, r8)
 8000804:	2000008e 	.word	0x2000008e

08000808 <__sinit_lock_release>:
 8000808:	b510      	push	{r4, lr}
 800080a:	4802      	ldr	r0, [pc, #8]	; (8000814 <__sinit_lock_release+0xc>)
 800080c:	f000 f8a6 	bl	800095c <__retarget_lock_release_recursive>
 8000810:	bd10      	pop	{r4, pc}
 8000812:	46c0      	nop			; (mov r8, r8)
 8000814:	2000008e 	.word	0x2000008e

08000818 <__sinit>:
 8000818:	b513      	push	{r0, r1, r4, lr}
 800081a:	0004      	movs	r4, r0
 800081c:	f7ff ffec 	bl	80007f8 <__sinit_lock_acquire>
 8000820:	69a3      	ldr	r3, [r4, #24]
 8000822:	2b00      	cmp	r3, #0
 8000824:	d002      	beq.n	800082c <__sinit+0x14>
 8000826:	f7ff ffef 	bl	8000808 <__sinit_lock_release>
 800082a:	bd13      	pop	{r0, r1, r4, pc}
 800082c:	64a3      	str	r3, [r4, #72]	; 0x48
 800082e:	64e3      	str	r3, [r4, #76]	; 0x4c
 8000830:	6523      	str	r3, [r4, #80]	; 0x50
 8000832:	4b13      	ldr	r3, [pc, #76]	; (8000880 <__sinit+0x68>)
 8000834:	4a13      	ldr	r2, [pc, #76]	; (8000884 <__sinit+0x6c>)
 8000836:	681b      	ldr	r3, [r3, #0]
 8000838:	62a2      	str	r2, [r4, #40]	; 0x28
 800083a:	9301      	str	r3, [sp, #4]
 800083c:	42a3      	cmp	r3, r4
 800083e:	d101      	bne.n	8000844 <__sinit+0x2c>
 8000840:	2301      	movs	r3, #1
 8000842:	61a3      	str	r3, [r4, #24]
 8000844:	0020      	movs	r0, r4
 8000846:	f000 f81f 	bl	8000888 <__sfp>
 800084a:	6060      	str	r0, [r4, #4]
 800084c:	0020      	movs	r0, r4
 800084e:	f000 f81b 	bl	8000888 <__sfp>
 8000852:	60a0      	str	r0, [r4, #8]
 8000854:	0020      	movs	r0, r4
 8000856:	f000 f817 	bl	8000888 <__sfp>
 800085a:	2200      	movs	r2, #0
 800085c:	2104      	movs	r1, #4
 800085e:	60e0      	str	r0, [r4, #12]
 8000860:	6860      	ldr	r0, [r4, #4]
 8000862:	f7ff ff77 	bl	8000754 <std>
 8000866:	2201      	movs	r2, #1
 8000868:	2109      	movs	r1, #9
 800086a:	68a0      	ldr	r0, [r4, #8]
 800086c:	f7ff ff72 	bl	8000754 <std>
 8000870:	2202      	movs	r2, #2
 8000872:	2112      	movs	r1, #18
 8000874:	68e0      	ldr	r0, [r4, #12]
 8000876:	f7ff ff6d 	bl	8000754 <std>
 800087a:	2301      	movs	r3, #1
 800087c:	61a3      	str	r3, [r4, #24]
 800087e:	e7d2      	b.n	8000826 <__sinit+0xe>
 8000880:	08001704 	.word	0x08001704
 8000884:	0800079d 	.word	0x0800079d

08000888 <__sfp>:
 8000888:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800088a:	0007      	movs	r7, r0
 800088c:	f7ff ffa4 	bl	80007d8 <__sfp_lock_acquire>
 8000890:	4b1f      	ldr	r3, [pc, #124]	; (8000910 <__sfp+0x88>)
 8000892:	681e      	ldr	r6, [r3, #0]
 8000894:	69b3      	ldr	r3, [r6, #24]
 8000896:	2b00      	cmp	r3, #0
 8000898:	d102      	bne.n	80008a0 <__sfp+0x18>
 800089a:	0030      	movs	r0, r6
 800089c:	f7ff ffbc 	bl	8000818 <__sinit>
 80008a0:	3648      	adds	r6, #72	; 0x48
 80008a2:	68b4      	ldr	r4, [r6, #8]
 80008a4:	6873      	ldr	r3, [r6, #4]
 80008a6:	3b01      	subs	r3, #1
 80008a8:	d504      	bpl.n	80008b4 <__sfp+0x2c>
 80008aa:	6833      	ldr	r3, [r6, #0]
 80008ac:	2b00      	cmp	r3, #0
 80008ae:	d022      	beq.n	80008f6 <__sfp+0x6e>
 80008b0:	6836      	ldr	r6, [r6, #0]
 80008b2:	e7f6      	b.n	80008a2 <__sfp+0x1a>
 80008b4:	220c      	movs	r2, #12
 80008b6:	5ea5      	ldrsh	r5, [r4, r2]
 80008b8:	2d00      	cmp	r5, #0
 80008ba:	d11a      	bne.n	80008f2 <__sfp+0x6a>
 80008bc:	0020      	movs	r0, r4
 80008be:	4b15      	ldr	r3, [pc, #84]	; (8000914 <__sfp+0x8c>)
 80008c0:	3058      	adds	r0, #88	; 0x58
 80008c2:	60e3      	str	r3, [r4, #12]
 80008c4:	6665      	str	r5, [r4, #100]	; 0x64
 80008c6:	f000 f847 	bl	8000958 <__retarget_lock_init_recursive>
 80008ca:	f7ff ff8d 	bl	80007e8 <__sfp_lock_release>
 80008ce:	0020      	movs	r0, r4
 80008d0:	2208      	movs	r2, #8
 80008d2:	0029      	movs	r1, r5
 80008d4:	6025      	str	r5, [r4, #0]
 80008d6:	60a5      	str	r5, [r4, #8]
 80008d8:	6065      	str	r5, [r4, #4]
 80008da:	6125      	str	r5, [r4, #16]
 80008dc:	6165      	str	r5, [r4, #20]
 80008de:	61a5      	str	r5, [r4, #24]
 80008e0:	305c      	adds	r0, #92	; 0x5c
 80008e2:	f7ff ff15 	bl	8000710 <memset>
 80008e6:	6365      	str	r5, [r4, #52]	; 0x34
 80008e8:	63a5      	str	r5, [r4, #56]	; 0x38
 80008ea:	64a5      	str	r5, [r4, #72]	; 0x48
 80008ec:	64e5      	str	r5, [r4, #76]	; 0x4c
 80008ee:	0020      	movs	r0, r4
 80008f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80008f2:	3468      	adds	r4, #104	; 0x68
 80008f4:	e7d7      	b.n	80008a6 <__sfp+0x1e>
 80008f6:	2104      	movs	r1, #4
 80008f8:	0038      	movs	r0, r7
 80008fa:	f7ff ff57 	bl	80007ac <__sfmoreglue>
 80008fe:	1e04      	subs	r4, r0, #0
 8000900:	6030      	str	r0, [r6, #0]
 8000902:	d1d5      	bne.n	80008b0 <__sfp+0x28>
 8000904:	f7ff ff70 	bl	80007e8 <__sfp_lock_release>
 8000908:	230c      	movs	r3, #12
 800090a:	603b      	str	r3, [r7, #0]
 800090c:	e7ef      	b.n	80008ee <__sfp+0x66>
 800090e:	46c0      	nop			; (mov r8, r8)
 8000910:	08001704 	.word	0x08001704
 8000914:	ffff0001 	.word	0xffff0001

08000918 <_fwalk_reent>:
 8000918:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800091a:	0004      	movs	r4, r0
 800091c:	0006      	movs	r6, r0
 800091e:	2700      	movs	r7, #0
 8000920:	9101      	str	r1, [sp, #4]
 8000922:	3448      	adds	r4, #72	; 0x48
 8000924:	6863      	ldr	r3, [r4, #4]
 8000926:	68a5      	ldr	r5, [r4, #8]
 8000928:	9300      	str	r3, [sp, #0]
 800092a:	9b00      	ldr	r3, [sp, #0]
 800092c:	3b01      	subs	r3, #1
 800092e:	9300      	str	r3, [sp, #0]
 8000930:	d504      	bpl.n	800093c <_fwalk_reent+0x24>
 8000932:	6824      	ldr	r4, [r4, #0]
 8000934:	2c00      	cmp	r4, #0
 8000936:	d1f5      	bne.n	8000924 <_fwalk_reent+0xc>
 8000938:	0038      	movs	r0, r7
 800093a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800093c:	89ab      	ldrh	r3, [r5, #12]
 800093e:	2b01      	cmp	r3, #1
 8000940:	d908      	bls.n	8000954 <_fwalk_reent+0x3c>
 8000942:	220e      	movs	r2, #14
 8000944:	5eab      	ldrsh	r3, [r5, r2]
 8000946:	3301      	adds	r3, #1
 8000948:	d004      	beq.n	8000954 <_fwalk_reent+0x3c>
 800094a:	0029      	movs	r1, r5
 800094c:	0030      	movs	r0, r6
 800094e:	9b01      	ldr	r3, [sp, #4]
 8000950:	4798      	blx	r3
 8000952:	4307      	orrs	r7, r0
 8000954:	3568      	adds	r5, #104	; 0x68
 8000956:	e7e8      	b.n	800092a <_fwalk_reent+0x12>

08000958 <__retarget_lock_init_recursive>:
 8000958:	4770      	bx	lr

0800095a <__retarget_lock_acquire_recursive>:
 800095a:	4770      	bx	lr

0800095c <__retarget_lock_release_recursive>:
 800095c:	4770      	bx	lr
	...

08000960 <sbrk_aligned>:
 8000960:	b570      	push	{r4, r5, r6, lr}
 8000962:	4e0f      	ldr	r6, [pc, #60]	; (80009a0 <sbrk_aligned+0x40>)
 8000964:	000d      	movs	r5, r1
 8000966:	6831      	ldr	r1, [r6, #0]
 8000968:	0004      	movs	r4, r0
 800096a:	2900      	cmp	r1, #0
 800096c:	d102      	bne.n	8000974 <sbrk_aligned+0x14>
 800096e:	f000 fb73 	bl	8001058 <_sbrk_r>
 8000972:	6030      	str	r0, [r6, #0]
 8000974:	0029      	movs	r1, r5
 8000976:	0020      	movs	r0, r4
 8000978:	f000 fb6e 	bl	8001058 <_sbrk_r>
 800097c:	1c43      	adds	r3, r0, #1
 800097e:	d00a      	beq.n	8000996 <sbrk_aligned+0x36>
 8000980:	2303      	movs	r3, #3
 8000982:	1cc5      	adds	r5, r0, #3
 8000984:	439d      	bics	r5, r3
 8000986:	42a8      	cmp	r0, r5
 8000988:	d007      	beq.n	800099a <sbrk_aligned+0x3a>
 800098a:	1a29      	subs	r1, r5, r0
 800098c:	0020      	movs	r0, r4
 800098e:	f000 fb63 	bl	8001058 <_sbrk_r>
 8000992:	1c43      	adds	r3, r0, #1
 8000994:	d101      	bne.n	800099a <sbrk_aligned+0x3a>
 8000996:	2501      	movs	r5, #1
 8000998:	426d      	negs	r5, r5
 800099a:	0028      	movs	r0, r5
 800099c:	bd70      	pop	{r4, r5, r6, pc}
 800099e:	46c0      	nop			; (mov r8, r8)
 80009a0:	20000094 	.word	0x20000094

080009a4 <_malloc_r>:
 80009a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80009a6:	2203      	movs	r2, #3
 80009a8:	1ccb      	adds	r3, r1, #3
 80009aa:	4393      	bics	r3, r2
 80009ac:	3308      	adds	r3, #8
 80009ae:	0006      	movs	r6, r0
 80009b0:	001f      	movs	r7, r3
 80009b2:	2b0c      	cmp	r3, #12
 80009b4:	d232      	bcs.n	8000a1c <_malloc_r+0x78>
 80009b6:	270c      	movs	r7, #12
 80009b8:	42b9      	cmp	r1, r7
 80009ba:	d831      	bhi.n	8000a20 <_malloc_r+0x7c>
 80009bc:	0030      	movs	r0, r6
 80009be:	f000 fdf5 	bl	80015ac <__malloc_lock>
 80009c2:	4d32      	ldr	r5, [pc, #200]	; (8000a8c <_malloc_r+0xe8>)
 80009c4:	682b      	ldr	r3, [r5, #0]
 80009c6:	001c      	movs	r4, r3
 80009c8:	2c00      	cmp	r4, #0
 80009ca:	d12e      	bne.n	8000a2a <_malloc_r+0x86>
 80009cc:	0039      	movs	r1, r7
 80009ce:	0030      	movs	r0, r6
 80009d0:	f7ff ffc6 	bl	8000960 <sbrk_aligned>
 80009d4:	0004      	movs	r4, r0
 80009d6:	1c43      	adds	r3, r0, #1
 80009d8:	d11e      	bne.n	8000a18 <_malloc_r+0x74>
 80009da:	682c      	ldr	r4, [r5, #0]
 80009dc:	0025      	movs	r5, r4
 80009de:	2d00      	cmp	r5, #0
 80009e0:	d14a      	bne.n	8000a78 <_malloc_r+0xd4>
 80009e2:	6823      	ldr	r3, [r4, #0]
 80009e4:	0029      	movs	r1, r5
 80009e6:	18e3      	adds	r3, r4, r3
 80009e8:	0030      	movs	r0, r6
 80009ea:	9301      	str	r3, [sp, #4]
 80009ec:	f000 fb34 	bl	8001058 <_sbrk_r>
 80009f0:	9b01      	ldr	r3, [sp, #4]
 80009f2:	4283      	cmp	r3, r0
 80009f4:	d143      	bne.n	8000a7e <_malloc_r+0xda>
 80009f6:	6823      	ldr	r3, [r4, #0]
 80009f8:	3703      	adds	r7, #3
 80009fa:	1aff      	subs	r7, r7, r3
 80009fc:	2303      	movs	r3, #3
 80009fe:	439f      	bics	r7, r3
 8000a00:	3708      	adds	r7, #8
 8000a02:	2f0c      	cmp	r7, #12
 8000a04:	d200      	bcs.n	8000a08 <_malloc_r+0x64>
 8000a06:	270c      	movs	r7, #12
 8000a08:	0039      	movs	r1, r7
 8000a0a:	0030      	movs	r0, r6
 8000a0c:	f7ff ffa8 	bl	8000960 <sbrk_aligned>
 8000a10:	1c43      	adds	r3, r0, #1
 8000a12:	d034      	beq.n	8000a7e <_malloc_r+0xda>
 8000a14:	6823      	ldr	r3, [r4, #0]
 8000a16:	19df      	adds	r7, r3, r7
 8000a18:	6027      	str	r7, [r4, #0]
 8000a1a:	e013      	b.n	8000a44 <_malloc_r+0xa0>
 8000a1c:	2b00      	cmp	r3, #0
 8000a1e:	dacb      	bge.n	80009b8 <_malloc_r+0x14>
 8000a20:	230c      	movs	r3, #12
 8000a22:	2500      	movs	r5, #0
 8000a24:	6033      	str	r3, [r6, #0]
 8000a26:	0028      	movs	r0, r5
 8000a28:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000a2a:	6822      	ldr	r2, [r4, #0]
 8000a2c:	1bd1      	subs	r1, r2, r7
 8000a2e:	d420      	bmi.n	8000a72 <_malloc_r+0xce>
 8000a30:	290b      	cmp	r1, #11
 8000a32:	d917      	bls.n	8000a64 <_malloc_r+0xc0>
 8000a34:	19e2      	adds	r2, r4, r7
 8000a36:	6027      	str	r7, [r4, #0]
 8000a38:	42a3      	cmp	r3, r4
 8000a3a:	d111      	bne.n	8000a60 <_malloc_r+0xbc>
 8000a3c:	602a      	str	r2, [r5, #0]
 8000a3e:	6863      	ldr	r3, [r4, #4]
 8000a40:	6011      	str	r1, [r2, #0]
 8000a42:	6053      	str	r3, [r2, #4]
 8000a44:	0030      	movs	r0, r6
 8000a46:	0025      	movs	r5, r4
 8000a48:	f000 fdb8 	bl	80015bc <__malloc_unlock>
 8000a4c:	2207      	movs	r2, #7
 8000a4e:	350b      	adds	r5, #11
 8000a50:	1d23      	adds	r3, r4, #4
 8000a52:	4395      	bics	r5, r2
 8000a54:	1aea      	subs	r2, r5, r3
 8000a56:	429d      	cmp	r5, r3
 8000a58:	d0e5      	beq.n	8000a26 <_malloc_r+0x82>
 8000a5a:	1b5b      	subs	r3, r3, r5
 8000a5c:	50a3      	str	r3, [r4, r2]
 8000a5e:	e7e2      	b.n	8000a26 <_malloc_r+0x82>
 8000a60:	605a      	str	r2, [r3, #4]
 8000a62:	e7ec      	b.n	8000a3e <_malloc_r+0x9a>
 8000a64:	6862      	ldr	r2, [r4, #4]
 8000a66:	42a3      	cmp	r3, r4
 8000a68:	d101      	bne.n	8000a6e <_malloc_r+0xca>
 8000a6a:	602a      	str	r2, [r5, #0]
 8000a6c:	e7ea      	b.n	8000a44 <_malloc_r+0xa0>
 8000a6e:	605a      	str	r2, [r3, #4]
 8000a70:	e7e8      	b.n	8000a44 <_malloc_r+0xa0>
 8000a72:	0023      	movs	r3, r4
 8000a74:	6864      	ldr	r4, [r4, #4]
 8000a76:	e7a7      	b.n	80009c8 <_malloc_r+0x24>
 8000a78:	002c      	movs	r4, r5
 8000a7a:	686d      	ldr	r5, [r5, #4]
 8000a7c:	e7af      	b.n	80009de <_malloc_r+0x3a>
 8000a7e:	230c      	movs	r3, #12
 8000a80:	0030      	movs	r0, r6
 8000a82:	6033      	str	r3, [r6, #0]
 8000a84:	f000 fd9a 	bl	80015bc <__malloc_unlock>
 8000a88:	e7cd      	b.n	8000a26 <_malloc_r+0x82>
 8000a8a:	46c0      	nop			; (mov r8, r8)
 8000a8c:	20000090 	.word	0x20000090

08000a90 <__sfputc_r>:
 8000a90:	6893      	ldr	r3, [r2, #8]
 8000a92:	b510      	push	{r4, lr}
 8000a94:	3b01      	subs	r3, #1
 8000a96:	6093      	str	r3, [r2, #8]
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	da04      	bge.n	8000aa6 <__sfputc_r+0x16>
 8000a9c:	6994      	ldr	r4, [r2, #24]
 8000a9e:	42a3      	cmp	r3, r4
 8000aa0:	db07      	blt.n	8000ab2 <__sfputc_r+0x22>
 8000aa2:	290a      	cmp	r1, #10
 8000aa4:	d005      	beq.n	8000ab2 <__sfputc_r+0x22>
 8000aa6:	6813      	ldr	r3, [r2, #0]
 8000aa8:	1c58      	adds	r0, r3, #1
 8000aaa:	6010      	str	r0, [r2, #0]
 8000aac:	7019      	strb	r1, [r3, #0]
 8000aae:	0008      	movs	r0, r1
 8000ab0:	bd10      	pop	{r4, pc}
 8000ab2:	f000 fb2f 	bl	8001114 <__swbuf_r>
 8000ab6:	0001      	movs	r1, r0
 8000ab8:	e7f9      	b.n	8000aae <__sfputc_r+0x1e>

08000aba <__sfputs_r>:
 8000aba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000abc:	0006      	movs	r6, r0
 8000abe:	000f      	movs	r7, r1
 8000ac0:	0014      	movs	r4, r2
 8000ac2:	18d5      	adds	r5, r2, r3
 8000ac4:	42ac      	cmp	r4, r5
 8000ac6:	d101      	bne.n	8000acc <__sfputs_r+0x12>
 8000ac8:	2000      	movs	r0, #0
 8000aca:	e007      	b.n	8000adc <__sfputs_r+0x22>
 8000acc:	7821      	ldrb	r1, [r4, #0]
 8000ace:	003a      	movs	r2, r7
 8000ad0:	0030      	movs	r0, r6
 8000ad2:	f7ff ffdd 	bl	8000a90 <__sfputc_r>
 8000ad6:	3401      	adds	r4, #1
 8000ad8:	1c43      	adds	r3, r0, #1
 8000ada:	d1f3      	bne.n	8000ac4 <__sfputs_r+0xa>
 8000adc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000ae0 <_vfiprintf_r>:
 8000ae0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000ae2:	b0a1      	sub	sp, #132	; 0x84
 8000ae4:	0006      	movs	r6, r0
 8000ae6:	000c      	movs	r4, r1
 8000ae8:	001f      	movs	r7, r3
 8000aea:	9203      	str	r2, [sp, #12]
 8000aec:	2800      	cmp	r0, #0
 8000aee:	d004      	beq.n	8000afa <_vfiprintf_r+0x1a>
 8000af0:	6983      	ldr	r3, [r0, #24]
 8000af2:	2b00      	cmp	r3, #0
 8000af4:	d101      	bne.n	8000afa <_vfiprintf_r+0x1a>
 8000af6:	f7ff fe8f 	bl	8000818 <__sinit>
 8000afa:	4b8e      	ldr	r3, [pc, #568]	; (8000d34 <_vfiprintf_r+0x254>)
 8000afc:	429c      	cmp	r4, r3
 8000afe:	d11c      	bne.n	8000b3a <_vfiprintf_r+0x5a>
 8000b00:	6874      	ldr	r4, [r6, #4]
 8000b02:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b04:	07db      	lsls	r3, r3, #31
 8000b06:	d405      	bmi.n	8000b14 <_vfiprintf_r+0x34>
 8000b08:	89a3      	ldrh	r3, [r4, #12]
 8000b0a:	059b      	lsls	r3, r3, #22
 8000b0c:	d402      	bmi.n	8000b14 <_vfiprintf_r+0x34>
 8000b0e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b10:	f7ff ff23 	bl	800095a <__retarget_lock_acquire_recursive>
 8000b14:	89a3      	ldrh	r3, [r4, #12]
 8000b16:	071b      	lsls	r3, r3, #28
 8000b18:	d502      	bpl.n	8000b20 <_vfiprintf_r+0x40>
 8000b1a:	6923      	ldr	r3, [r4, #16]
 8000b1c:	2b00      	cmp	r3, #0
 8000b1e:	d11d      	bne.n	8000b5c <_vfiprintf_r+0x7c>
 8000b20:	0021      	movs	r1, r4
 8000b22:	0030      	movs	r0, r6
 8000b24:	f000 fb60 	bl	80011e8 <__swsetup_r>
 8000b28:	2800      	cmp	r0, #0
 8000b2a:	d017      	beq.n	8000b5c <_vfiprintf_r+0x7c>
 8000b2c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000b2e:	07db      	lsls	r3, r3, #31
 8000b30:	d50d      	bpl.n	8000b4e <_vfiprintf_r+0x6e>
 8000b32:	2001      	movs	r0, #1
 8000b34:	4240      	negs	r0, r0
 8000b36:	b021      	add	sp, #132	; 0x84
 8000b38:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000b3a:	4b7f      	ldr	r3, [pc, #508]	; (8000d38 <_vfiprintf_r+0x258>)
 8000b3c:	429c      	cmp	r4, r3
 8000b3e:	d101      	bne.n	8000b44 <_vfiprintf_r+0x64>
 8000b40:	68b4      	ldr	r4, [r6, #8]
 8000b42:	e7de      	b.n	8000b02 <_vfiprintf_r+0x22>
 8000b44:	4b7d      	ldr	r3, [pc, #500]	; (8000d3c <_vfiprintf_r+0x25c>)
 8000b46:	429c      	cmp	r4, r3
 8000b48:	d1db      	bne.n	8000b02 <_vfiprintf_r+0x22>
 8000b4a:	68f4      	ldr	r4, [r6, #12]
 8000b4c:	e7d9      	b.n	8000b02 <_vfiprintf_r+0x22>
 8000b4e:	89a3      	ldrh	r3, [r4, #12]
 8000b50:	059b      	lsls	r3, r3, #22
 8000b52:	d4ee      	bmi.n	8000b32 <_vfiprintf_r+0x52>
 8000b54:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000b56:	f7ff ff01 	bl	800095c <__retarget_lock_release_recursive>
 8000b5a:	e7ea      	b.n	8000b32 <_vfiprintf_r+0x52>
 8000b5c:	2300      	movs	r3, #0
 8000b5e:	ad08      	add	r5, sp, #32
 8000b60:	616b      	str	r3, [r5, #20]
 8000b62:	3320      	adds	r3, #32
 8000b64:	766b      	strb	r3, [r5, #25]
 8000b66:	3310      	adds	r3, #16
 8000b68:	76ab      	strb	r3, [r5, #26]
 8000b6a:	9707      	str	r7, [sp, #28]
 8000b6c:	9f03      	ldr	r7, [sp, #12]
 8000b6e:	783b      	ldrb	r3, [r7, #0]
 8000b70:	2b00      	cmp	r3, #0
 8000b72:	d001      	beq.n	8000b78 <_vfiprintf_r+0x98>
 8000b74:	2b25      	cmp	r3, #37	; 0x25
 8000b76:	d14e      	bne.n	8000c16 <_vfiprintf_r+0x136>
 8000b78:	9b03      	ldr	r3, [sp, #12]
 8000b7a:	1afb      	subs	r3, r7, r3
 8000b7c:	9305      	str	r3, [sp, #20]
 8000b7e:	9b03      	ldr	r3, [sp, #12]
 8000b80:	429f      	cmp	r7, r3
 8000b82:	d00d      	beq.n	8000ba0 <_vfiprintf_r+0xc0>
 8000b84:	9b05      	ldr	r3, [sp, #20]
 8000b86:	0021      	movs	r1, r4
 8000b88:	0030      	movs	r0, r6
 8000b8a:	9a03      	ldr	r2, [sp, #12]
 8000b8c:	f7ff ff95 	bl	8000aba <__sfputs_r>
 8000b90:	1c43      	adds	r3, r0, #1
 8000b92:	d100      	bne.n	8000b96 <_vfiprintf_r+0xb6>
 8000b94:	e0b5      	b.n	8000d02 <_vfiprintf_r+0x222>
 8000b96:	696a      	ldr	r2, [r5, #20]
 8000b98:	9b05      	ldr	r3, [sp, #20]
 8000b9a:	4694      	mov	ip, r2
 8000b9c:	4463      	add	r3, ip
 8000b9e:	616b      	str	r3, [r5, #20]
 8000ba0:	783b      	ldrb	r3, [r7, #0]
 8000ba2:	2b00      	cmp	r3, #0
 8000ba4:	d100      	bne.n	8000ba8 <_vfiprintf_r+0xc8>
 8000ba6:	e0ac      	b.n	8000d02 <_vfiprintf_r+0x222>
 8000ba8:	2201      	movs	r2, #1
 8000baa:	1c7b      	adds	r3, r7, #1
 8000bac:	9303      	str	r3, [sp, #12]
 8000bae:	2300      	movs	r3, #0
 8000bb0:	4252      	negs	r2, r2
 8000bb2:	606a      	str	r2, [r5, #4]
 8000bb4:	a904      	add	r1, sp, #16
 8000bb6:	3254      	adds	r2, #84	; 0x54
 8000bb8:	1852      	adds	r2, r2, r1
 8000bba:	602b      	str	r3, [r5, #0]
 8000bbc:	60eb      	str	r3, [r5, #12]
 8000bbe:	60ab      	str	r3, [r5, #8]
 8000bc0:	7013      	strb	r3, [r2, #0]
 8000bc2:	65ab      	str	r3, [r5, #88]	; 0x58
 8000bc4:	9b03      	ldr	r3, [sp, #12]
 8000bc6:	2205      	movs	r2, #5
 8000bc8:	7819      	ldrb	r1, [r3, #0]
 8000bca:	485d      	ldr	r0, [pc, #372]	; (8000d40 <_vfiprintf_r+0x260>)
 8000bcc:	f000 fce2 	bl	8001594 <memchr>
 8000bd0:	9b03      	ldr	r3, [sp, #12]
 8000bd2:	1c5f      	adds	r7, r3, #1
 8000bd4:	2800      	cmp	r0, #0
 8000bd6:	d120      	bne.n	8000c1a <_vfiprintf_r+0x13a>
 8000bd8:	682a      	ldr	r2, [r5, #0]
 8000bda:	06d3      	lsls	r3, r2, #27
 8000bdc:	d504      	bpl.n	8000be8 <_vfiprintf_r+0x108>
 8000bde:	2353      	movs	r3, #83	; 0x53
 8000be0:	a904      	add	r1, sp, #16
 8000be2:	185b      	adds	r3, r3, r1
 8000be4:	2120      	movs	r1, #32
 8000be6:	7019      	strb	r1, [r3, #0]
 8000be8:	0713      	lsls	r3, r2, #28
 8000bea:	d504      	bpl.n	8000bf6 <_vfiprintf_r+0x116>
 8000bec:	2353      	movs	r3, #83	; 0x53
 8000bee:	a904      	add	r1, sp, #16
 8000bf0:	185b      	adds	r3, r3, r1
 8000bf2:	212b      	movs	r1, #43	; 0x2b
 8000bf4:	7019      	strb	r1, [r3, #0]
 8000bf6:	9b03      	ldr	r3, [sp, #12]
 8000bf8:	781b      	ldrb	r3, [r3, #0]
 8000bfa:	2b2a      	cmp	r3, #42	; 0x2a
 8000bfc:	d016      	beq.n	8000c2c <_vfiprintf_r+0x14c>
 8000bfe:	2100      	movs	r1, #0
 8000c00:	68eb      	ldr	r3, [r5, #12]
 8000c02:	9f03      	ldr	r7, [sp, #12]
 8000c04:	783a      	ldrb	r2, [r7, #0]
 8000c06:	1c78      	adds	r0, r7, #1
 8000c08:	3a30      	subs	r2, #48	; 0x30
 8000c0a:	4684      	mov	ip, r0
 8000c0c:	2a09      	cmp	r2, #9
 8000c0e:	d94f      	bls.n	8000cb0 <_vfiprintf_r+0x1d0>
 8000c10:	2900      	cmp	r1, #0
 8000c12:	d111      	bne.n	8000c38 <_vfiprintf_r+0x158>
 8000c14:	e017      	b.n	8000c46 <_vfiprintf_r+0x166>
 8000c16:	3701      	adds	r7, #1
 8000c18:	e7a9      	b.n	8000b6e <_vfiprintf_r+0x8e>
 8000c1a:	4b49      	ldr	r3, [pc, #292]	; (8000d40 <_vfiprintf_r+0x260>)
 8000c1c:	682a      	ldr	r2, [r5, #0]
 8000c1e:	1ac0      	subs	r0, r0, r3
 8000c20:	2301      	movs	r3, #1
 8000c22:	4083      	lsls	r3, r0
 8000c24:	4313      	orrs	r3, r2
 8000c26:	602b      	str	r3, [r5, #0]
 8000c28:	9703      	str	r7, [sp, #12]
 8000c2a:	e7cb      	b.n	8000bc4 <_vfiprintf_r+0xe4>
 8000c2c:	9b07      	ldr	r3, [sp, #28]
 8000c2e:	1d19      	adds	r1, r3, #4
 8000c30:	681b      	ldr	r3, [r3, #0]
 8000c32:	9107      	str	r1, [sp, #28]
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	db01      	blt.n	8000c3c <_vfiprintf_r+0x15c>
 8000c38:	930b      	str	r3, [sp, #44]	; 0x2c
 8000c3a:	e004      	b.n	8000c46 <_vfiprintf_r+0x166>
 8000c3c:	425b      	negs	r3, r3
 8000c3e:	60eb      	str	r3, [r5, #12]
 8000c40:	2302      	movs	r3, #2
 8000c42:	4313      	orrs	r3, r2
 8000c44:	602b      	str	r3, [r5, #0]
 8000c46:	783b      	ldrb	r3, [r7, #0]
 8000c48:	2b2e      	cmp	r3, #46	; 0x2e
 8000c4a:	d10a      	bne.n	8000c62 <_vfiprintf_r+0x182>
 8000c4c:	787b      	ldrb	r3, [r7, #1]
 8000c4e:	2b2a      	cmp	r3, #42	; 0x2a
 8000c50:	d137      	bne.n	8000cc2 <_vfiprintf_r+0x1e2>
 8000c52:	9b07      	ldr	r3, [sp, #28]
 8000c54:	3702      	adds	r7, #2
 8000c56:	1d1a      	adds	r2, r3, #4
 8000c58:	681b      	ldr	r3, [r3, #0]
 8000c5a:	9207      	str	r2, [sp, #28]
 8000c5c:	2b00      	cmp	r3, #0
 8000c5e:	db2d      	blt.n	8000cbc <_vfiprintf_r+0x1dc>
 8000c60:	9309      	str	r3, [sp, #36]	; 0x24
 8000c62:	2203      	movs	r2, #3
 8000c64:	7839      	ldrb	r1, [r7, #0]
 8000c66:	4837      	ldr	r0, [pc, #220]	; (8000d44 <_vfiprintf_r+0x264>)
 8000c68:	f000 fc94 	bl	8001594 <memchr>
 8000c6c:	2800      	cmp	r0, #0
 8000c6e:	d007      	beq.n	8000c80 <_vfiprintf_r+0x1a0>
 8000c70:	4b34      	ldr	r3, [pc, #208]	; (8000d44 <_vfiprintf_r+0x264>)
 8000c72:	682a      	ldr	r2, [r5, #0]
 8000c74:	1ac0      	subs	r0, r0, r3
 8000c76:	2340      	movs	r3, #64	; 0x40
 8000c78:	4083      	lsls	r3, r0
 8000c7a:	4313      	orrs	r3, r2
 8000c7c:	3701      	adds	r7, #1
 8000c7e:	602b      	str	r3, [r5, #0]
 8000c80:	7839      	ldrb	r1, [r7, #0]
 8000c82:	1c7b      	adds	r3, r7, #1
 8000c84:	2206      	movs	r2, #6
 8000c86:	4830      	ldr	r0, [pc, #192]	; (8000d48 <_vfiprintf_r+0x268>)
 8000c88:	9303      	str	r3, [sp, #12]
 8000c8a:	7629      	strb	r1, [r5, #24]
 8000c8c:	f000 fc82 	bl	8001594 <memchr>
 8000c90:	2800      	cmp	r0, #0
 8000c92:	d045      	beq.n	8000d20 <_vfiprintf_r+0x240>
 8000c94:	4b2d      	ldr	r3, [pc, #180]	; (8000d4c <_vfiprintf_r+0x26c>)
 8000c96:	2b00      	cmp	r3, #0
 8000c98:	d127      	bne.n	8000cea <_vfiprintf_r+0x20a>
 8000c9a:	2207      	movs	r2, #7
 8000c9c:	9b07      	ldr	r3, [sp, #28]
 8000c9e:	3307      	adds	r3, #7
 8000ca0:	4393      	bics	r3, r2
 8000ca2:	3308      	adds	r3, #8
 8000ca4:	9307      	str	r3, [sp, #28]
 8000ca6:	696b      	ldr	r3, [r5, #20]
 8000ca8:	9a04      	ldr	r2, [sp, #16]
 8000caa:	189b      	adds	r3, r3, r2
 8000cac:	616b      	str	r3, [r5, #20]
 8000cae:	e75d      	b.n	8000b6c <_vfiprintf_r+0x8c>
 8000cb0:	210a      	movs	r1, #10
 8000cb2:	434b      	muls	r3, r1
 8000cb4:	4667      	mov	r7, ip
 8000cb6:	189b      	adds	r3, r3, r2
 8000cb8:	3909      	subs	r1, #9
 8000cba:	e7a3      	b.n	8000c04 <_vfiprintf_r+0x124>
 8000cbc:	2301      	movs	r3, #1
 8000cbe:	425b      	negs	r3, r3
 8000cc0:	e7ce      	b.n	8000c60 <_vfiprintf_r+0x180>
 8000cc2:	2300      	movs	r3, #0
 8000cc4:	001a      	movs	r2, r3
 8000cc6:	3701      	adds	r7, #1
 8000cc8:	606b      	str	r3, [r5, #4]
 8000cca:	7839      	ldrb	r1, [r7, #0]
 8000ccc:	1c78      	adds	r0, r7, #1
 8000cce:	3930      	subs	r1, #48	; 0x30
 8000cd0:	4684      	mov	ip, r0
 8000cd2:	2909      	cmp	r1, #9
 8000cd4:	d903      	bls.n	8000cde <_vfiprintf_r+0x1fe>
 8000cd6:	2b00      	cmp	r3, #0
 8000cd8:	d0c3      	beq.n	8000c62 <_vfiprintf_r+0x182>
 8000cda:	9209      	str	r2, [sp, #36]	; 0x24
 8000cdc:	e7c1      	b.n	8000c62 <_vfiprintf_r+0x182>
 8000cde:	230a      	movs	r3, #10
 8000ce0:	435a      	muls	r2, r3
 8000ce2:	4667      	mov	r7, ip
 8000ce4:	1852      	adds	r2, r2, r1
 8000ce6:	3b09      	subs	r3, #9
 8000ce8:	e7ef      	b.n	8000cca <_vfiprintf_r+0x1ea>
 8000cea:	ab07      	add	r3, sp, #28
 8000cec:	9300      	str	r3, [sp, #0]
 8000cee:	0022      	movs	r2, r4
 8000cf0:	0029      	movs	r1, r5
 8000cf2:	0030      	movs	r0, r6
 8000cf4:	4b16      	ldr	r3, [pc, #88]	; (8000d50 <_vfiprintf_r+0x270>)
 8000cf6:	e000      	b.n	8000cfa <_vfiprintf_r+0x21a>
 8000cf8:	bf00      	nop
 8000cfa:	9004      	str	r0, [sp, #16]
 8000cfc:	9b04      	ldr	r3, [sp, #16]
 8000cfe:	3301      	adds	r3, #1
 8000d00:	d1d1      	bne.n	8000ca6 <_vfiprintf_r+0x1c6>
 8000d02:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000d04:	07db      	lsls	r3, r3, #31
 8000d06:	d405      	bmi.n	8000d14 <_vfiprintf_r+0x234>
 8000d08:	89a3      	ldrh	r3, [r4, #12]
 8000d0a:	059b      	lsls	r3, r3, #22
 8000d0c:	d402      	bmi.n	8000d14 <_vfiprintf_r+0x234>
 8000d0e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000d10:	f7ff fe24 	bl	800095c <__retarget_lock_release_recursive>
 8000d14:	89a3      	ldrh	r3, [r4, #12]
 8000d16:	065b      	lsls	r3, r3, #25
 8000d18:	d500      	bpl.n	8000d1c <_vfiprintf_r+0x23c>
 8000d1a:	e70a      	b.n	8000b32 <_vfiprintf_r+0x52>
 8000d1c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8000d1e:	e70a      	b.n	8000b36 <_vfiprintf_r+0x56>
 8000d20:	ab07      	add	r3, sp, #28
 8000d22:	9300      	str	r3, [sp, #0]
 8000d24:	0022      	movs	r2, r4
 8000d26:	0029      	movs	r1, r5
 8000d28:	0030      	movs	r0, r6
 8000d2a:	4b09      	ldr	r3, [pc, #36]	; (8000d50 <_vfiprintf_r+0x270>)
 8000d2c:	f000 f882 	bl	8000e34 <_printf_i>
 8000d30:	e7e3      	b.n	8000cfa <_vfiprintf_r+0x21a>
 8000d32:	46c0      	nop			; (mov r8, r8)
 8000d34:	08001728 	.word	0x08001728
 8000d38:	08001748 	.word	0x08001748
 8000d3c:	08001708 	.word	0x08001708
 8000d40:	08001768 	.word	0x08001768
 8000d44:	0800176e 	.word	0x0800176e
 8000d48:	08001772 	.word	0x08001772
 8000d4c:	00000000 	.word	0x00000000
 8000d50:	08000abb 	.word	0x08000abb

08000d54 <_printf_common>:
 8000d54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000d56:	0015      	movs	r5, r2
 8000d58:	9301      	str	r3, [sp, #4]
 8000d5a:	688a      	ldr	r2, [r1, #8]
 8000d5c:	690b      	ldr	r3, [r1, #16]
 8000d5e:	000c      	movs	r4, r1
 8000d60:	9000      	str	r0, [sp, #0]
 8000d62:	4293      	cmp	r3, r2
 8000d64:	da00      	bge.n	8000d68 <_printf_common+0x14>
 8000d66:	0013      	movs	r3, r2
 8000d68:	0022      	movs	r2, r4
 8000d6a:	602b      	str	r3, [r5, #0]
 8000d6c:	3243      	adds	r2, #67	; 0x43
 8000d6e:	7812      	ldrb	r2, [r2, #0]
 8000d70:	2a00      	cmp	r2, #0
 8000d72:	d001      	beq.n	8000d78 <_printf_common+0x24>
 8000d74:	3301      	adds	r3, #1
 8000d76:	602b      	str	r3, [r5, #0]
 8000d78:	6823      	ldr	r3, [r4, #0]
 8000d7a:	069b      	lsls	r3, r3, #26
 8000d7c:	d502      	bpl.n	8000d84 <_printf_common+0x30>
 8000d7e:	682b      	ldr	r3, [r5, #0]
 8000d80:	3302      	adds	r3, #2
 8000d82:	602b      	str	r3, [r5, #0]
 8000d84:	6822      	ldr	r2, [r4, #0]
 8000d86:	2306      	movs	r3, #6
 8000d88:	0017      	movs	r7, r2
 8000d8a:	401f      	ands	r7, r3
 8000d8c:	421a      	tst	r2, r3
 8000d8e:	d027      	beq.n	8000de0 <_printf_common+0x8c>
 8000d90:	0023      	movs	r3, r4
 8000d92:	3343      	adds	r3, #67	; 0x43
 8000d94:	781b      	ldrb	r3, [r3, #0]
 8000d96:	1e5a      	subs	r2, r3, #1
 8000d98:	4193      	sbcs	r3, r2
 8000d9a:	6822      	ldr	r2, [r4, #0]
 8000d9c:	0692      	lsls	r2, r2, #26
 8000d9e:	d430      	bmi.n	8000e02 <_printf_common+0xae>
 8000da0:	0022      	movs	r2, r4
 8000da2:	9901      	ldr	r1, [sp, #4]
 8000da4:	9800      	ldr	r0, [sp, #0]
 8000da6:	9e08      	ldr	r6, [sp, #32]
 8000da8:	3243      	adds	r2, #67	; 0x43
 8000daa:	47b0      	blx	r6
 8000dac:	1c43      	adds	r3, r0, #1
 8000dae:	d025      	beq.n	8000dfc <_printf_common+0xa8>
 8000db0:	2306      	movs	r3, #6
 8000db2:	6820      	ldr	r0, [r4, #0]
 8000db4:	682a      	ldr	r2, [r5, #0]
 8000db6:	68e1      	ldr	r1, [r4, #12]
 8000db8:	2500      	movs	r5, #0
 8000dba:	4003      	ands	r3, r0
 8000dbc:	2b04      	cmp	r3, #4
 8000dbe:	d103      	bne.n	8000dc8 <_printf_common+0x74>
 8000dc0:	1a8d      	subs	r5, r1, r2
 8000dc2:	43eb      	mvns	r3, r5
 8000dc4:	17db      	asrs	r3, r3, #31
 8000dc6:	401d      	ands	r5, r3
 8000dc8:	68a3      	ldr	r3, [r4, #8]
 8000dca:	6922      	ldr	r2, [r4, #16]
 8000dcc:	4293      	cmp	r3, r2
 8000dce:	dd01      	ble.n	8000dd4 <_printf_common+0x80>
 8000dd0:	1a9b      	subs	r3, r3, r2
 8000dd2:	18ed      	adds	r5, r5, r3
 8000dd4:	2700      	movs	r7, #0
 8000dd6:	42bd      	cmp	r5, r7
 8000dd8:	d120      	bne.n	8000e1c <_printf_common+0xc8>
 8000dda:	2000      	movs	r0, #0
 8000ddc:	e010      	b.n	8000e00 <_printf_common+0xac>
 8000dde:	3701      	adds	r7, #1
 8000de0:	68e3      	ldr	r3, [r4, #12]
 8000de2:	682a      	ldr	r2, [r5, #0]
 8000de4:	1a9b      	subs	r3, r3, r2
 8000de6:	42bb      	cmp	r3, r7
 8000de8:	ddd2      	ble.n	8000d90 <_printf_common+0x3c>
 8000dea:	0022      	movs	r2, r4
 8000dec:	2301      	movs	r3, #1
 8000dee:	9901      	ldr	r1, [sp, #4]
 8000df0:	9800      	ldr	r0, [sp, #0]
 8000df2:	9e08      	ldr	r6, [sp, #32]
 8000df4:	3219      	adds	r2, #25
 8000df6:	47b0      	blx	r6
 8000df8:	1c43      	adds	r3, r0, #1
 8000dfa:	d1f0      	bne.n	8000dde <_printf_common+0x8a>
 8000dfc:	2001      	movs	r0, #1
 8000dfe:	4240      	negs	r0, r0
 8000e00:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000e02:	2030      	movs	r0, #48	; 0x30
 8000e04:	18e1      	adds	r1, r4, r3
 8000e06:	3143      	adds	r1, #67	; 0x43
 8000e08:	7008      	strb	r0, [r1, #0]
 8000e0a:	0021      	movs	r1, r4
 8000e0c:	1c5a      	adds	r2, r3, #1
 8000e0e:	3145      	adds	r1, #69	; 0x45
 8000e10:	7809      	ldrb	r1, [r1, #0]
 8000e12:	18a2      	adds	r2, r4, r2
 8000e14:	3243      	adds	r2, #67	; 0x43
 8000e16:	3302      	adds	r3, #2
 8000e18:	7011      	strb	r1, [r2, #0]
 8000e1a:	e7c1      	b.n	8000da0 <_printf_common+0x4c>
 8000e1c:	0022      	movs	r2, r4
 8000e1e:	2301      	movs	r3, #1
 8000e20:	9901      	ldr	r1, [sp, #4]
 8000e22:	9800      	ldr	r0, [sp, #0]
 8000e24:	9e08      	ldr	r6, [sp, #32]
 8000e26:	321a      	adds	r2, #26
 8000e28:	47b0      	blx	r6
 8000e2a:	1c43      	adds	r3, r0, #1
 8000e2c:	d0e6      	beq.n	8000dfc <_printf_common+0xa8>
 8000e2e:	3701      	adds	r7, #1
 8000e30:	e7d1      	b.n	8000dd6 <_printf_common+0x82>
	...

08000e34 <_printf_i>:
 8000e34:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000e36:	b08b      	sub	sp, #44	; 0x2c
 8000e38:	9206      	str	r2, [sp, #24]
 8000e3a:	000a      	movs	r2, r1
 8000e3c:	3243      	adds	r2, #67	; 0x43
 8000e3e:	9307      	str	r3, [sp, #28]
 8000e40:	9005      	str	r0, [sp, #20]
 8000e42:	9204      	str	r2, [sp, #16]
 8000e44:	7e0a      	ldrb	r2, [r1, #24]
 8000e46:	000c      	movs	r4, r1
 8000e48:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8000e4a:	2a78      	cmp	r2, #120	; 0x78
 8000e4c:	d807      	bhi.n	8000e5e <_printf_i+0x2a>
 8000e4e:	2a62      	cmp	r2, #98	; 0x62
 8000e50:	d809      	bhi.n	8000e66 <_printf_i+0x32>
 8000e52:	2a00      	cmp	r2, #0
 8000e54:	d100      	bne.n	8000e58 <_printf_i+0x24>
 8000e56:	e0c1      	b.n	8000fdc <_printf_i+0x1a8>
 8000e58:	2a58      	cmp	r2, #88	; 0x58
 8000e5a:	d100      	bne.n	8000e5e <_printf_i+0x2a>
 8000e5c:	e08c      	b.n	8000f78 <_printf_i+0x144>
 8000e5e:	0026      	movs	r6, r4
 8000e60:	3642      	adds	r6, #66	; 0x42
 8000e62:	7032      	strb	r2, [r6, #0]
 8000e64:	e022      	b.n	8000eac <_printf_i+0x78>
 8000e66:	0010      	movs	r0, r2
 8000e68:	3863      	subs	r0, #99	; 0x63
 8000e6a:	2815      	cmp	r0, #21
 8000e6c:	d8f7      	bhi.n	8000e5e <_printf_i+0x2a>
 8000e6e:	f7ff f94b 	bl	8000108 <__gnu_thumb1_case_shi>
 8000e72:	0016      	.short	0x0016
 8000e74:	fff6001f 	.word	0xfff6001f
 8000e78:	fff6fff6 	.word	0xfff6fff6
 8000e7c:	001ffff6 	.word	0x001ffff6
 8000e80:	fff6fff6 	.word	0xfff6fff6
 8000e84:	fff6fff6 	.word	0xfff6fff6
 8000e88:	003600a8 	.word	0x003600a8
 8000e8c:	fff6009a 	.word	0xfff6009a
 8000e90:	00b9fff6 	.word	0x00b9fff6
 8000e94:	0036fff6 	.word	0x0036fff6
 8000e98:	fff6fff6 	.word	0xfff6fff6
 8000e9c:	009e      	.short	0x009e
 8000e9e:	0026      	movs	r6, r4
 8000ea0:	681a      	ldr	r2, [r3, #0]
 8000ea2:	3642      	adds	r6, #66	; 0x42
 8000ea4:	1d11      	adds	r1, r2, #4
 8000ea6:	6019      	str	r1, [r3, #0]
 8000ea8:	6813      	ldr	r3, [r2, #0]
 8000eaa:	7033      	strb	r3, [r6, #0]
 8000eac:	2301      	movs	r3, #1
 8000eae:	e0a7      	b.n	8001000 <_printf_i+0x1cc>
 8000eb0:	6808      	ldr	r0, [r1, #0]
 8000eb2:	6819      	ldr	r1, [r3, #0]
 8000eb4:	1d0a      	adds	r2, r1, #4
 8000eb6:	0605      	lsls	r5, r0, #24
 8000eb8:	d50b      	bpl.n	8000ed2 <_printf_i+0x9e>
 8000eba:	680d      	ldr	r5, [r1, #0]
 8000ebc:	601a      	str	r2, [r3, #0]
 8000ebe:	2d00      	cmp	r5, #0
 8000ec0:	da03      	bge.n	8000eca <_printf_i+0x96>
 8000ec2:	232d      	movs	r3, #45	; 0x2d
 8000ec4:	9a04      	ldr	r2, [sp, #16]
 8000ec6:	426d      	negs	r5, r5
 8000ec8:	7013      	strb	r3, [r2, #0]
 8000eca:	4b61      	ldr	r3, [pc, #388]	; (8001050 <_printf_i+0x21c>)
 8000ecc:	270a      	movs	r7, #10
 8000ece:	9303      	str	r3, [sp, #12]
 8000ed0:	e01b      	b.n	8000f0a <_printf_i+0xd6>
 8000ed2:	680d      	ldr	r5, [r1, #0]
 8000ed4:	601a      	str	r2, [r3, #0]
 8000ed6:	0641      	lsls	r1, r0, #25
 8000ed8:	d5f1      	bpl.n	8000ebe <_printf_i+0x8a>
 8000eda:	b22d      	sxth	r5, r5
 8000edc:	e7ef      	b.n	8000ebe <_printf_i+0x8a>
 8000ede:	680d      	ldr	r5, [r1, #0]
 8000ee0:	6819      	ldr	r1, [r3, #0]
 8000ee2:	1d08      	adds	r0, r1, #4
 8000ee4:	6018      	str	r0, [r3, #0]
 8000ee6:	062e      	lsls	r6, r5, #24
 8000ee8:	d501      	bpl.n	8000eee <_printf_i+0xba>
 8000eea:	680d      	ldr	r5, [r1, #0]
 8000eec:	e003      	b.n	8000ef6 <_printf_i+0xc2>
 8000eee:	066d      	lsls	r5, r5, #25
 8000ef0:	d5fb      	bpl.n	8000eea <_printf_i+0xb6>
 8000ef2:	680d      	ldr	r5, [r1, #0]
 8000ef4:	b2ad      	uxth	r5, r5
 8000ef6:	4b56      	ldr	r3, [pc, #344]	; (8001050 <_printf_i+0x21c>)
 8000ef8:	2708      	movs	r7, #8
 8000efa:	9303      	str	r3, [sp, #12]
 8000efc:	2a6f      	cmp	r2, #111	; 0x6f
 8000efe:	d000      	beq.n	8000f02 <_printf_i+0xce>
 8000f00:	3702      	adds	r7, #2
 8000f02:	0023      	movs	r3, r4
 8000f04:	2200      	movs	r2, #0
 8000f06:	3343      	adds	r3, #67	; 0x43
 8000f08:	701a      	strb	r2, [r3, #0]
 8000f0a:	6863      	ldr	r3, [r4, #4]
 8000f0c:	60a3      	str	r3, [r4, #8]
 8000f0e:	2b00      	cmp	r3, #0
 8000f10:	db03      	blt.n	8000f1a <_printf_i+0xe6>
 8000f12:	2204      	movs	r2, #4
 8000f14:	6821      	ldr	r1, [r4, #0]
 8000f16:	4391      	bics	r1, r2
 8000f18:	6021      	str	r1, [r4, #0]
 8000f1a:	2d00      	cmp	r5, #0
 8000f1c:	d102      	bne.n	8000f24 <_printf_i+0xf0>
 8000f1e:	9e04      	ldr	r6, [sp, #16]
 8000f20:	2b00      	cmp	r3, #0
 8000f22:	d00c      	beq.n	8000f3e <_printf_i+0x10a>
 8000f24:	9e04      	ldr	r6, [sp, #16]
 8000f26:	0028      	movs	r0, r5
 8000f28:	0039      	movs	r1, r7
 8000f2a:	f7ff f97d 	bl	8000228 <__aeabi_uidivmod>
 8000f2e:	9b03      	ldr	r3, [sp, #12]
 8000f30:	3e01      	subs	r6, #1
 8000f32:	5c5b      	ldrb	r3, [r3, r1]
 8000f34:	7033      	strb	r3, [r6, #0]
 8000f36:	002b      	movs	r3, r5
 8000f38:	0005      	movs	r5, r0
 8000f3a:	429f      	cmp	r7, r3
 8000f3c:	d9f3      	bls.n	8000f26 <_printf_i+0xf2>
 8000f3e:	2f08      	cmp	r7, #8
 8000f40:	d109      	bne.n	8000f56 <_printf_i+0x122>
 8000f42:	6823      	ldr	r3, [r4, #0]
 8000f44:	07db      	lsls	r3, r3, #31
 8000f46:	d506      	bpl.n	8000f56 <_printf_i+0x122>
 8000f48:	6863      	ldr	r3, [r4, #4]
 8000f4a:	6922      	ldr	r2, [r4, #16]
 8000f4c:	4293      	cmp	r3, r2
 8000f4e:	dc02      	bgt.n	8000f56 <_printf_i+0x122>
 8000f50:	2330      	movs	r3, #48	; 0x30
 8000f52:	3e01      	subs	r6, #1
 8000f54:	7033      	strb	r3, [r6, #0]
 8000f56:	9b04      	ldr	r3, [sp, #16]
 8000f58:	1b9b      	subs	r3, r3, r6
 8000f5a:	6123      	str	r3, [r4, #16]
 8000f5c:	9b07      	ldr	r3, [sp, #28]
 8000f5e:	0021      	movs	r1, r4
 8000f60:	9300      	str	r3, [sp, #0]
 8000f62:	9805      	ldr	r0, [sp, #20]
 8000f64:	9b06      	ldr	r3, [sp, #24]
 8000f66:	aa09      	add	r2, sp, #36	; 0x24
 8000f68:	f7ff fef4 	bl	8000d54 <_printf_common>
 8000f6c:	1c43      	adds	r3, r0, #1
 8000f6e:	d14c      	bne.n	800100a <_printf_i+0x1d6>
 8000f70:	2001      	movs	r0, #1
 8000f72:	4240      	negs	r0, r0
 8000f74:	b00b      	add	sp, #44	; 0x2c
 8000f76:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f78:	3145      	adds	r1, #69	; 0x45
 8000f7a:	700a      	strb	r2, [r1, #0]
 8000f7c:	4a34      	ldr	r2, [pc, #208]	; (8001050 <_printf_i+0x21c>)
 8000f7e:	9203      	str	r2, [sp, #12]
 8000f80:	681a      	ldr	r2, [r3, #0]
 8000f82:	6821      	ldr	r1, [r4, #0]
 8000f84:	ca20      	ldmia	r2!, {r5}
 8000f86:	601a      	str	r2, [r3, #0]
 8000f88:	0608      	lsls	r0, r1, #24
 8000f8a:	d516      	bpl.n	8000fba <_printf_i+0x186>
 8000f8c:	07cb      	lsls	r3, r1, #31
 8000f8e:	d502      	bpl.n	8000f96 <_printf_i+0x162>
 8000f90:	2320      	movs	r3, #32
 8000f92:	4319      	orrs	r1, r3
 8000f94:	6021      	str	r1, [r4, #0]
 8000f96:	2710      	movs	r7, #16
 8000f98:	2d00      	cmp	r5, #0
 8000f9a:	d1b2      	bne.n	8000f02 <_printf_i+0xce>
 8000f9c:	2320      	movs	r3, #32
 8000f9e:	6822      	ldr	r2, [r4, #0]
 8000fa0:	439a      	bics	r2, r3
 8000fa2:	6022      	str	r2, [r4, #0]
 8000fa4:	e7ad      	b.n	8000f02 <_printf_i+0xce>
 8000fa6:	2220      	movs	r2, #32
 8000fa8:	6809      	ldr	r1, [r1, #0]
 8000faa:	430a      	orrs	r2, r1
 8000fac:	6022      	str	r2, [r4, #0]
 8000fae:	0022      	movs	r2, r4
 8000fb0:	2178      	movs	r1, #120	; 0x78
 8000fb2:	3245      	adds	r2, #69	; 0x45
 8000fb4:	7011      	strb	r1, [r2, #0]
 8000fb6:	4a27      	ldr	r2, [pc, #156]	; (8001054 <_printf_i+0x220>)
 8000fb8:	e7e1      	b.n	8000f7e <_printf_i+0x14a>
 8000fba:	0648      	lsls	r0, r1, #25
 8000fbc:	d5e6      	bpl.n	8000f8c <_printf_i+0x158>
 8000fbe:	b2ad      	uxth	r5, r5
 8000fc0:	e7e4      	b.n	8000f8c <_printf_i+0x158>
 8000fc2:	681a      	ldr	r2, [r3, #0]
 8000fc4:	680d      	ldr	r5, [r1, #0]
 8000fc6:	1d10      	adds	r0, r2, #4
 8000fc8:	6949      	ldr	r1, [r1, #20]
 8000fca:	6018      	str	r0, [r3, #0]
 8000fcc:	6813      	ldr	r3, [r2, #0]
 8000fce:	062e      	lsls	r6, r5, #24
 8000fd0:	d501      	bpl.n	8000fd6 <_printf_i+0x1a2>
 8000fd2:	6019      	str	r1, [r3, #0]
 8000fd4:	e002      	b.n	8000fdc <_printf_i+0x1a8>
 8000fd6:	066d      	lsls	r5, r5, #25
 8000fd8:	d5fb      	bpl.n	8000fd2 <_printf_i+0x19e>
 8000fda:	8019      	strh	r1, [r3, #0]
 8000fdc:	2300      	movs	r3, #0
 8000fde:	9e04      	ldr	r6, [sp, #16]
 8000fe0:	6123      	str	r3, [r4, #16]
 8000fe2:	e7bb      	b.n	8000f5c <_printf_i+0x128>
 8000fe4:	681a      	ldr	r2, [r3, #0]
 8000fe6:	1d11      	adds	r1, r2, #4
 8000fe8:	6019      	str	r1, [r3, #0]
 8000fea:	6816      	ldr	r6, [r2, #0]
 8000fec:	2100      	movs	r1, #0
 8000fee:	0030      	movs	r0, r6
 8000ff0:	6862      	ldr	r2, [r4, #4]
 8000ff2:	f000 facf 	bl	8001594 <memchr>
 8000ff6:	2800      	cmp	r0, #0
 8000ff8:	d001      	beq.n	8000ffe <_printf_i+0x1ca>
 8000ffa:	1b80      	subs	r0, r0, r6
 8000ffc:	6060      	str	r0, [r4, #4]
 8000ffe:	6863      	ldr	r3, [r4, #4]
 8001000:	6123      	str	r3, [r4, #16]
 8001002:	2300      	movs	r3, #0
 8001004:	9a04      	ldr	r2, [sp, #16]
 8001006:	7013      	strb	r3, [r2, #0]
 8001008:	e7a8      	b.n	8000f5c <_printf_i+0x128>
 800100a:	6923      	ldr	r3, [r4, #16]
 800100c:	0032      	movs	r2, r6
 800100e:	9906      	ldr	r1, [sp, #24]
 8001010:	9805      	ldr	r0, [sp, #20]
 8001012:	9d07      	ldr	r5, [sp, #28]
 8001014:	47a8      	blx	r5
 8001016:	1c43      	adds	r3, r0, #1
 8001018:	d0aa      	beq.n	8000f70 <_printf_i+0x13c>
 800101a:	6823      	ldr	r3, [r4, #0]
 800101c:	079b      	lsls	r3, r3, #30
 800101e:	d415      	bmi.n	800104c <_printf_i+0x218>
 8001020:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001022:	68e0      	ldr	r0, [r4, #12]
 8001024:	4298      	cmp	r0, r3
 8001026:	daa5      	bge.n	8000f74 <_printf_i+0x140>
 8001028:	0018      	movs	r0, r3
 800102a:	e7a3      	b.n	8000f74 <_printf_i+0x140>
 800102c:	0022      	movs	r2, r4
 800102e:	2301      	movs	r3, #1
 8001030:	9906      	ldr	r1, [sp, #24]
 8001032:	9805      	ldr	r0, [sp, #20]
 8001034:	9e07      	ldr	r6, [sp, #28]
 8001036:	3219      	adds	r2, #25
 8001038:	47b0      	blx	r6
 800103a:	1c43      	adds	r3, r0, #1
 800103c:	d098      	beq.n	8000f70 <_printf_i+0x13c>
 800103e:	3501      	adds	r5, #1
 8001040:	68e3      	ldr	r3, [r4, #12]
 8001042:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001044:	1a9b      	subs	r3, r3, r2
 8001046:	42ab      	cmp	r3, r5
 8001048:	dcf0      	bgt.n	800102c <_printf_i+0x1f8>
 800104a:	e7e9      	b.n	8001020 <_printf_i+0x1ec>
 800104c:	2500      	movs	r5, #0
 800104e:	e7f7      	b.n	8001040 <_printf_i+0x20c>
 8001050:	08001779 	.word	0x08001779
 8001054:	0800178a 	.word	0x0800178a

08001058 <_sbrk_r>:
 8001058:	2300      	movs	r3, #0
 800105a:	b570      	push	{r4, r5, r6, lr}
 800105c:	4d06      	ldr	r5, [pc, #24]	; (8001078 <_sbrk_r+0x20>)
 800105e:	0004      	movs	r4, r0
 8001060:	0008      	movs	r0, r1
 8001062:	602b      	str	r3, [r5, #0]
 8001064:	f7ff f9a2 	bl	80003ac <_sbrk>
 8001068:	1c43      	adds	r3, r0, #1
 800106a:	d103      	bne.n	8001074 <_sbrk_r+0x1c>
 800106c:	682b      	ldr	r3, [r5, #0]
 800106e:	2b00      	cmp	r3, #0
 8001070:	d000      	beq.n	8001074 <_sbrk_r+0x1c>
 8001072:	6023      	str	r3, [r4, #0]
 8001074:	bd70      	pop	{r4, r5, r6, pc}
 8001076:	46c0      	nop			; (mov r8, r8)
 8001078:	20000098 	.word	0x20000098

0800107c <__sread>:
 800107c:	b570      	push	{r4, r5, r6, lr}
 800107e:	000c      	movs	r4, r1
 8001080:	250e      	movs	r5, #14
 8001082:	5f49      	ldrsh	r1, [r1, r5]
 8001084:	f000 faec 	bl	8001660 <_read_r>
 8001088:	2800      	cmp	r0, #0
 800108a:	db03      	blt.n	8001094 <__sread+0x18>
 800108c:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800108e:	181b      	adds	r3, r3, r0
 8001090:	6563      	str	r3, [r4, #84]	; 0x54
 8001092:	bd70      	pop	{r4, r5, r6, pc}
 8001094:	89a3      	ldrh	r3, [r4, #12]
 8001096:	4a02      	ldr	r2, [pc, #8]	; (80010a0 <__sread+0x24>)
 8001098:	4013      	ands	r3, r2
 800109a:	81a3      	strh	r3, [r4, #12]
 800109c:	e7f9      	b.n	8001092 <__sread+0x16>
 800109e:	46c0      	nop			; (mov r8, r8)
 80010a0:	ffffefff 	.word	0xffffefff

080010a4 <__swrite>:
 80010a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80010a6:	001f      	movs	r7, r3
 80010a8:	898b      	ldrh	r3, [r1, #12]
 80010aa:	0005      	movs	r5, r0
 80010ac:	000c      	movs	r4, r1
 80010ae:	0016      	movs	r6, r2
 80010b0:	05db      	lsls	r3, r3, #23
 80010b2:	d505      	bpl.n	80010c0 <__swrite+0x1c>
 80010b4:	230e      	movs	r3, #14
 80010b6:	5ec9      	ldrsh	r1, [r1, r3]
 80010b8:	2200      	movs	r2, #0
 80010ba:	2302      	movs	r3, #2
 80010bc:	f000 f9ea 	bl	8001494 <_lseek_r>
 80010c0:	89a3      	ldrh	r3, [r4, #12]
 80010c2:	4a05      	ldr	r2, [pc, #20]	; (80010d8 <__swrite+0x34>)
 80010c4:	0028      	movs	r0, r5
 80010c6:	4013      	ands	r3, r2
 80010c8:	81a3      	strh	r3, [r4, #12]
 80010ca:	0032      	movs	r2, r6
 80010cc:	230e      	movs	r3, #14
 80010ce:	5ee1      	ldrsh	r1, [r4, r3]
 80010d0:	003b      	movs	r3, r7
 80010d2:	f000 f875 	bl	80011c0 <_write_r>
 80010d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010d8:	ffffefff 	.word	0xffffefff

080010dc <__sseek>:
 80010dc:	b570      	push	{r4, r5, r6, lr}
 80010de:	000c      	movs	r4, r1
 80010e0:	250e      	movs	r5, #14
 80010e2:	5f49      	ldrsh	r1, [r1, r5]
 80010e4:	f000 f9d6 	bl	8001494 <_lseek_r>
 80010e8:	89a3      	ldrh	r3, [r4, #12]
 80010ea:	1c42      	adds	r2, r0, #1
 80010ec:	d103      	bne.n	80010f6 <__sseek+0x1a>
 80010ee:	4a05      	ldr	r2, [pc, #20]	; (8001104 <__sseek+0x28>)
 80010f0:	4013      	ands	r3, r2
 80010f2:	81a3      	strh	r3, [r4, #12]
 80010f4:	bd70      	pop	{r4, r5, r6, pc}
 80010f6:	2280      	movs	r2, #128	; 0x80
 80010f8:	0152      	lsls	r2, r2, #5
 80010fa:	4313      	orrs	r3, r2
 80010fc:	81a3      	strh	r3, [r4, #12]
 80010fe:	6560      	str	r0, [r4, #84]	; 0x54
 8001100:	e7f8      	b.n	80010f4 <__sseek+0x18>
 8001102:	46c0      	nop			; (mov r8, r8)
 8001104:	ffffefff 	.word	0xffffefff

08001108 <__sclose>:
 8001108:	b510      	push	{r4, lr}
 800110a:	230e      	movs	r3, #14
 800110c:	5ec9      	ldrsh	r1, [r1, r3]
 800110e:	f000 f8e3 	bl	80012d8 <_close_r>
 8001112:	bd10      	pop	{r4, pc}

08001114 <__swbuf_r>:
 8001114:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001116:	0005      	movs	r5, r0
 8001118:	000e      	movs	r6, r1
 800111a:	0014      	movs	r4, r2
 800111c:	2800      	cmp	r0, #0
 800111e:	d004      	beq.n	800112a <__swbuf_r+0x16>
 8001120:	6983      	ldr	r3, [r0, #24]
 8001122:	2b00      	cmp	r3, #0
 8001124:	d101      	bne.n	800112a <__swbuf_r+0x16>
 8001126:	f7ff fb77 	bl	8000818 <__sinit>
 800112a:	4b22      	ldr	r3, [pc, #136]	; (80011b4 <__swbuf_r+0xa0>)
 800112c:	429c      	cmp	r4, r3
 800112e:	d12e      	bne.n	800118e <__swbuf_r+0x7a>
 8001130:	686c      	ldr	r4, [r5, #4]
 8001132:	69a3      	ldr	r3, [r4, #24]
 8001134:	60a3      	str	r3, [r4, #8]
 8001136:	89a3      	ldrh	r3, [r4, #12]
 8001138:	071b      	lsls	r3, r3, #28
 800113a:	d532      	bpl.n	80011a2 <__swbuf_r+0x8e>
 800113c:	6923      	ldr	r3, [r4, #16]
 800113e:	2b00      	cmp	r3, #0
 8001140:	d02f      	beq.n	80011a2 <__swbuf_r+0x8e>
 8001142:	6823      	ldr	r3, [r4, #0]
 8001144:	6922      	ldr	r2, [r4, #16]
 8001146:	b2f7      	uxtb	r7, r6
 8001148:	1a98      	subs	r0, r3, r2
 800114a:	6963      	ldr	r3, [r4, #20]
 800114c:	b2f6      	uxtb	r6, r6
 800114e:	4283      	cmp	r3, r0
 8001150:	dc05      	bgt.n	800115e <__swbuf_r+0x4a>
 8001152:	0021      	movs	r1, r4
 8001154:	0028      	movs	r0, r5
 8001156:	f000 f95d 	bl	8001414 <_fflush_r>
 800115a:	2800      	cmp	r0, #0
 800115c:	d127      	bne.n	80011ae <__swbuf_r+0x9a>
 800115e:	68a3      	ldr	r3, [r4, #8]
 8001160:	3001      	adds	r0, #1
 8001162:	3b01      	subs	r3, #1
 8001164:	60a3      	str	r3, [r4, #8]
 8001166:	6823      	ldr	r3, [r4, #0]
 8001168:	1c5a      	adds	r2, r3, #1
 800116a:	6022      	str	r2, [r4, #0]
 800116c:	701f      	strb	r7, [r3, #0]
 800116e:	6963      	ldr	r3, [r4, #20]
 8001170:	4283      	cmp	r3, r0
 8001172:	d004      	beq.n	800117e <__swbuf_r+0x6a>
 8001174:	89a3      	ldrh	r3, [r4, #12]
 8001176:	07db      	lsls	r3, r3, #31
 8001178:	d507      	bpl.n	800118a <__swbuf_r+0x76>
 800117a:	2e0a      	cmp	r6, #10
 800117c:	d105      	bne.n	800118a <__swbuf_r+0x76>
 800117e:	0021      	movs	r1, r4
 8001180:	0028      	movs	r0, r5
 8001182:	f000 f947 	bl	8001414 <_fflush_r>
 8001186:	2800      	cmp	r0, #0
 8001188:	d111      	bne.n	80011ae <__swbuf_r+0x9a>
 800118a:	0030      	movs	r0, r6
 800118c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800118e:	4b0a      	ldr	r3, [pc, #40]	; (80011b8 <__swbuf_r+0xa4>)
 8001190:	429c      	cmp	r4, r3
 8001192:	d101      	bne.n	8001198 <__swbuf_r+0x84>
 8001194:	68ac      	ldr	r4, [r5, #8]
 8001196:	e7cc      	b.n	8001132 <__swbuf_r+0x1e>
 8001198:	4b08      	ldr	r3, [pc, #32]	; (80011bc <__swbuf_r+0xa8>)
 800119a:	429c      	cmp	r4, r3
 800119c:	d1c9      	bne.n	8001132 <__swbuf_r+0x1e>
 800119e:	68ec      	ldr	r4, [r5, #12]
 80011a0:	e7c7      	b.n	8001132 <__swbuf_r+0x1e>
 80011a2:	0021      	movs	r1, r4
 80011a4:	0028      	movs	r0, r5
 80011a6:	f000 f81f 	bl	80011e8 <__swsetup_r>
 80011aa:	2800      	cmp	r0, #0
 80011ac:	d0c9      	beq.n	8001142 <__swbuf_r+0x2e>
 80011ae:	2601      	movs	r6, #1
 80011b0:	4276      	negs	r6, r6
 80011b2:	e7ea      	b.n	800118a <__swbuf_r+0x76>
 80011b4:	08001728 	.word	0x08001728
 80011b8:	08001748 	.word	0x08001748
 80011bc:	08001708 	.word	0x08001708

080011c0 <_write_r>:
 80011c0:	b570      	push	{r4, r5, r6, lr}
 80011c2:	0004      	movs	r4, r0
 80011c4:	0008      	movs	r0, r1
 80011c6:	0011      	movs	r1, r2
 80011c8:	001a      	movs	r2, r3
 80011ca:	2300      	movs	r3, #0
 80011cc:	4d05      	ldr	r5, [pc, #20]	; (80011e4 <_write_r+0x24>)
 80011ce:	602b      	str	r3, [r5, #0]
 80011d0:	f7ff f8a4 	bl	800031c <_write>
 80011d4:	1c43      	adds	r3, r0, #1
 80011d6:	d103      	bne.n	80011e0 <_write_r+0x20>
 80011d8:	682b      	ldr	r3, [r5, #0]
 80011da:	2b00      	cmp	r3, #0
 80011dc:	d000      	beq.n	80011e0 <_write_r+0x20>
 80011de:	6023      	str	r3, [r4, #0]
 80011e0:	bd70      	pop	{r4, r5, r6, pc}
 80011e2:	46c0      	nop			; (mov r8, r8)
 80011e4:	20000098 	.word	0x20000098

080011e8 <__swsetup_r>:
 80011e8:	4b37      	ldr	r3, [pc, #220]	; (80012c8 <__swsetup_r+0xe0>)
 80011ea:	b570      	push	{r4, r5, r6, lr}
 80011ec:	681d      	ldr	r5, [r3, #0]
 80011ee:	0006      	movs	r6, r0
 80011f0:	000c      	movs	r4, r1
 80011f2:	2d00      	cmp	r5, #0
 80011f4:	d005      	beq.n	8001202 <__swsetup_r+0x1a>
 80011f6:	69ab      	ldr	r3, [r5, #24]
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	d102      	bne.n	8001202 <__swsetup_r+0x1a>
 80011fc:	0028      	movs	r0, r5
 80011fe:	f7ff fb0b 	bl	8000818 <__sinit>
 8001202:	4b32      	ldr	r3, [pc, #200]	; (80012cc <__swsetup_r+0xe4>)
 8001204:	429c      	cmp	r4, r3
 8001206:	d10f      	bne.n	8001228 <__swsetup_r+0x40>
 8001208:	686c      	ldr	r4, [r5, #4]
 800120a:	230c      	movs	r3, #12
 800120c:	5ee2      	ldrsh	r2, [r4, r3]
 800120e:	b293      	uxth	r3, r2
 8001210:	0711      	lsls	r1, r2, #28
 8001212:	d42d      	bmi.n	8001270 <__swsetup_r+0x88>
 8001214:	06d9      	lsls	r1, r3, #27
 8001216:	d411      	bmi.n	800123c <__swsetup_r+0x54>
 8001218:	2309      	movs	r3, #9
 800121a:	2001      	movs	r0, #1
 800121c:	6033      	str	r3, [r6, #0]
 800121e:	3337      	adds	r3, #55	; 0x37
 8001220:	4313      	orrs	r3, r2
 8001222:	81a3      	strh	r3, [r4, #12]
 8001224:	4240      	negs	r0, r0
 8001226:	bd70      	pop	{r4, r5, r6, pc}
 8001228:	4b29      	ldr	r3, [pc, #164]	; (80012d0 <__swsetup_r+0xe8>)
 800122a:	429c      	cmp	r4, r3
 800122c:	d101      	bne.n	8001232 <__swsetup_r+0x4a>
 800122e:	68ac      	ldr	r4, [r5, #8]
 8001230:	e7eb      	b.n	800120a <__swsetup_r+0x22>
 8001232:	4b28      	ldr	r3, [pc, #160]	; (80012d4 <__swsetup_r+0xec>)
 8001234:	429c      	cmp	r4, r3
 8001236:	d1e8      	bne.n	800120a <__swsetup_r+0x22>
 8001238:	68ec      	ldr	r4, [r5, #12]
 800123a:	e7e6      	b.n	800120a <__swsetup_r+0x22>
 800123c:	075b      	lsls	r3, r3, #29
 800123e:	d513      	bpl.n	8001268 <__swsetup_r+0x80>
 8001240:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001242:	2900      	cmp	r1, #0
 8001244:	d008      	beq.n	8001258 <__swsetup_r+0x70>
 8001246:	0023      	movs	r3, r4
 8001248:	3344      	adds	r3, #68	; 0x44
 800124a:	4299      	cmp	r1, r3
 800124c:	d002      	beq.n	8001254 <__swsetup_r+0x6c>
 800124e:	0030      	movs	r0, r6
 8001250:	f000 f9bc 	bl	80015cc <_free_r>
 8001254:	2300      	movs	r3, #0
 8001256:	6363      	str	r3, [r4, #52]	; 0x34
 8001258:	2224      	movs	r2, #36	; 0x24
 800125a:	89a3      	ldrh	r3, [r4, #12]
 800125c:	4393      	bics	r3, r2
 800125e:	81a3      	strh	r3, [r4, #12]
 8001260:	2300      	movs	r3, #0
 8001262:	6063      	str	r3, [r4, #4]
 8001264:	6923      	ldr	r3, [r4, #16]
 8001266:	6023      	str	r3, [r4, #0]
 8001268:	2308      	movs	r3, #8
 800126a:	89a2      	ldrh	r2, [r4, #12]
 800126c:	4313      	orrs	r3, r2
 800126e:	81a3      	strh	r3, [r4, #12]
 8001270:	6923      	ldr	r3, [r4, #16]
 8001272:	2b00      	cmp	r3, #0
 8001274:	d10b      	bne.n	800128e <__swsetup_r+0xa6>
 8001276:	21a0      	movs	r1, #160	; 0xa0
 8001278:	2280      	movs	r2, #128	; 0x80
 800127a:	89a3      	ldrh	r3, [r4, #12]
 800127c:	0089      	lsls	r1, r1, #2
 800127e:	0092      	lsls	r2, r2, #2
 8001280:	400b      	ands	r3, r1
 8001282:	4293      	cmp	r3, r2
 8001284:	d003      	beq.n	800128e <__swsetup_r+0xa6>
 8001286:	0021      	movs	r1, r4
 8001288:	0030      	movs	r0, r6
 800128a:	f000 f93f 	bl	800150c <__smakebuf_r>
 800128e:	220c      	movs	r2, #12
 8001290:	5ea3      	ldrsh	r3, [r4, r2]
 8001292:	2001      	movs	r0, #1
 8001294:	001a      	movs	r2, r3
 8001296:	b299      	uxth	r1, r3
 8001298:	4002      	ands	r2, r0
 800129a:	4203      	tst	r3, r0
 800129c:	d00f      	beq.n	80012be <__swsetup_r+0xd6>
 800129e:	2200      	movs	r2, #0
 80012a0:	60a2      	str	r2, [r4, #8]
 80012a2:	6962      	ldr	r2, [r4, #20]
 80012a4:	4252      	negs	r2, r2
 80012a6:	61a2      	str	r2, [r4, #24]
 80012a8:	2000      	movs	r0, #0
 80012aa:	6922      	ldr	r2, [r4, #16]
 80012ac:	4282      	cmp	r2, r0
 80012ae:	d1ba      	bne.n	8001226 <__swsetup_r+0x3e>
 80012b0:	060a      	lsls	r2, r1, #24
 80012b2:	d5b8      	bpl.n	8001226 <__swsetup_r+0x3e>
 80012b4:	2240      	movs	r2, #64	; 0x40
 80012b6:	4313      	orrs	r3, r2
 80012b8:	81a3      	strh	r3, [r4, #12]
 80012ba:	3801      	subs	r0, #1
 80012bc:	e7b3      	b.n	8001226 <__swsetup_r+0x3e>
 80012be:	0788      	lsls	r0, r1, #30
 80012c0:	d400      	bmi.n	80012c4 <__swsetup_r+0xdc>
 80012c2:	6962      	ldr	r2, [r4, #20]
 80012c4:	60a2      	str	r2, [r4, #8]
 80012c6:	e7ef      	b.n	80012a8 <__swsetup_r+0xc0>
 80012c8:	20000004 	.word	0x20000004
 80012cc:	08001728 	.word	0x08001728
 80012d0:	08001748 	.word	0x08001748
 80012d4:	08001708 	.word	0x08001708

080012d8 <_close_r>:
 80012d8:	2300      	movs	r3, #0
 80012da:	b570      	push	{r4, r5, r6, lr}
 80012dc:	4d06      	ldr	r5, [pc, #24]	; (80012f8 <_close_r+0x20>)
 80012de:	0004      	movs	r4, r0
 80012e0:	0008      	movs	r0, r1
 80012e2:	602b      	str	r3, [r5, #0]
 80012e4:	f7ff f836 	bl	8000354 <_close>
 80012e8:	1c43      	adds	r3, r0, #1
 80012ea:	d103      	bne.n	80012f4 <_close_r+0x1c>
 80012ec:	682b      	ldr	r3, [r5, #0]
 80012ee:	2b00      	cmp	r3, #0
 80012f0:	d000      	beq.n	80012f4 <_close_r+0x1c>
 80012f2:	6023      	str	r3, [r4, #0]
 80012f4:	bd70      	pop	{r4, r5, r6, pc}
 80012f6:	46c0      	nop			; (mov r8, r8)
 80012f8:	20000098 	.word	0x20000098

080012fc <__sflush_r>:
 80012fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012fe:	898b      	ldrh	r3, [r1, #12]
 8001300:	0005      	movs	r5, r0
 8001302:	000c      	movs	r4, r1
 8001304:	071a      	lsls	r2, r3, #28
 8001306:	d45f      	bmi.n	80013c8 <__sflush_r+0xcc>
 8001308:	684a      	ldr	r2, [r1, #4]
 800130a:	2a00      	cmp	r2, #0
 800130c:	dc04      	bgt.n	8001318 <__sflush_r+0x1c>
 800130e:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 8001310:	2a00      	cmp	r2, #0
 8001312:	dc01      	bgt.n	8001318 <__sflush_r+0x1c>
 8001314:	2000      	movs	r0, #0
 8001316:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001318:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800131a:	2f00      	cmp	r7, #0
 800131c:	d0fa      	beq.n	8001314 <__sflush_r+0x18>
 800131e:	2200      	movs	r2, #0
 8001320:	2180      	movs	r1, #128	; 0x80
 8001322:	682e      	ldr	r6, [r5, #0]
 8001324:	602a      	str	r2, [r5, #0]
 8001326:	001a      	movs	r2, r3
 8001328:	0149      	lsls	r1, r1, #5
 800132a:	400a      	ands	r2, r1
 800132c:	420b      	tst	r3, r1
 800132e:	d034      	beq.n	800139a <__sflush_r+0x9e>
 8001330:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001332:	89a3      	ldrh	r3, [r4, #12]
 8001334:	075b      	lsls	r3, r3, #29
 8001336:	d506      	bpl.n	8001346 <__sflush_r+0x4a>
 8001338:	6863      	ldr	r3, [r4, #4]
 800133a:	1ac0      	subs	r0, r0, r3
 800133c:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800133e:	2b00      	cmp	r3, #0
 8001340:	d001      	beq.n	8001346 <__sflush_r+0x4a>
 8001342:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001344:	1ac0      	subs	r0, r0, r3
 8001346:	0002      	movs	r2, r0
 8001348:	6a21      	ldr	r1, [r4, #32]
 800134a:	2300      	movs	r3, #0
 800134c:	0028      	movs	r0, r5
 800134e:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8001350:	47b8      	blx	r7
 8001352:	89a1      	ldrh	r1, [r4, #12]
 8001354:	1c43      	adds	r3, r0, #1
 8001356:	d106      	bne.n	8001366 <__sflush_r+0x6a>
 8001358:	682b      	ldr	r3, [r5, #0]
 800135a:	2b1d      	cmp	r3, #29
 800135c:	d831      	bhi.n	80013c2 <__sflush_r+0xc6>
 800135e:	4a2c      	ldr	r2, [pc, #176]	; (8001410 <__sflush_r+0x114>)
 8001360:	40da      	lsrs	r2, r3
 8001362:	07d3      	lsls	r3, r2, #31
 8001364:	d52d      	bpl.n	80013c2 <__sflush_r+0xc6>
 8001366:	2300      	movs	r3, #0
 8001368:	6063      	str	r3, [r4, #4]
 800136a:	6923      	ldr	r3, [r4, #16]
 800136c:	6023      	str	r3, [r4, #0]
 800136e:	04cb      	lsls	r3, r1, #19
 8001370:	d505      	bpl.n	800137e <__sflush_r+0x82>
 8001372:	1c43      	adds	r3, r0, #1
 8001374:	d102      	bne.n	800137c <__sflush_r+0x80>
 8001376:	682b      	ldr	r3, [r5, #0]
 8001378:	2b00      	cmp	r3, #0
 800137a:	d100      	bne.n	800137e <__sflush_r+0x82>
 800137c:	6560      	str	r0, [r4, #84]	; 0x54
 800137e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001380:	602e      	str	r6, [r5, #0]
 8001382:	2900      	cmp	r1, #0
 8001384:	d0c6      	beq.n	8001314 <__sflush_r+0x18>
 8001386:	0023      	movs	r3, r4
 8001388:	3344      	adds	r3, #68	; 0x44
 800138a:	4299      	cmp	r1, r3
 800138c:	d002      	beq.n	8001394 <__sflush_r+0x98>
 800138e:	0028      	movs	r0, r5
 8001390:	f000 f91c 	bl	80015cc <_free_r>
 8001394:	2000      	movs	r0, #0
 8001396:	6360      	str	r0, [r4, #52]	; 0x34
 8001398:	e7bd      	b.n	8001316 <__sflush_r+0x1a>
 800139a:	2301      	movs	r3, #1
 800139c:	0028      	movs	r0, r5
 800139e:	6a21      	ldr	r1, [r4, #32]
 80013a0:	47b8      	blx	r7
 80013a2:	1c43      	adds	r3, r0, #1
 80013a4:	d1c5      	bne.n	8001332 <__sflush_r+0x36>
 80013a6:	682b      	ldr	r3, [r5, #0]
 80013a8:	2b00      	cmp	r3, #0
 80013aa:	d0c2      	beq.n	8001332 <__sflush_r+0x36>
 80013ac:	2b1d      	cmp	r3, #29
 80013ae:	d001      	beq.n	80013b4 <__sflush_r+0xb8>
 80013b0:	2b16      	cmp	r3, #22
 80013b2:	d101      	bne.n	80013b8 <__sflush_r+0xbc>
 80013b4:	602e      	str	r6, [r5, #0]
 80013b6:	e7ad      	b.n	8001314 <__sflush_r+0x18>
 80013b8:	2340      	movs	r3, #64	; 0x40
 80013ba:	89a2      	ldrh	r2, [r4, #12]
 80013bc:	4313      	orrs	r3, r2
 80013be:	81a3      	strh	r3, [r4, #12]
 80013c0:	e7a9      	b.n	8001316 <__sflush_r+0x1a>
 80013c2:	2340      	movs	r3, #64	; 0x40
 80013c4:	430b      	orrs	r3, r1
 80013c6:	e7fa      	b.n	80013be <__sflush_r+0xc2>
 80013c8:	690f      	ldr	r7, [r1, #16]
 80013ca:	2f00      	cmp	r7, #0
 80013cc:	d0a2      	beq.n	8001314 <__sflush_r+0x18>
 80013ce:	680a      	ldr	r2, [r1, #0]
 80013d0:	600f      	str	r7, [r1, #0]
 80013d2:	1bd2      	subs	r2, r2, r7
 80013d4:	9201      	str	r2, [sp, #4]
 80013d6:	2200      	movs	r2, #0
 80013d8:	079b      	lsls	r3, r3, #30
 80013da:	d100      	bne.n	80013de <__sflush_r+0xe2>
 80013dc:	694a      	ldr	r2, [r1, #20]
 80013de:	60a2      	str	r2, [r4, #8]
 80013e0:	9b01      	ldr	r3, [sp, #4]
 80013e2:	2b00      	cmp	r3, #0
 80013e4:	dc00      	bgt.n	80013e8 <__sflush_r+0xec>
 80013e6:	e795      	b.n	8001314 <__sflush_r+0x18>
 80013e8:	003a      	movs	r2, r7
 80013ea:	0028      	movs	r0, r5
 80013ec:	9b01      	ldr	r3, [sp, #4]
 80013ee:	6a21      	ldr	r1, [r4, #32]
 80013f0:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80013f2:	47b0      	blx	r6
 80013f4:	2800      	cmp	r0, #0
 80013f6:	dc06      	bgt.n	8001406 <__sflush_r+0x10a>
 80013f8:	2340      	movs	r3, #64	; 0x40
 80013fa:	2001      	movs	r0, #1
 80013fc:	89a2      	ldrh	r2, [r4, #12]
 80013fe:	4240      	negs	r0, r0
 8001400:	4313      	orrs	r3, r2
 8001402:	81a3      	strh	r3, [r4, #12]
 8001404:	e787      	b.n	8001316 <__sflush_r+0x1a>
 8001406:	9b01      	ldr	r3, [sp, #4]
 8001408:	183f      	adds	r7, r7, r0
 800140a:	1a1b      	subs	r3, r3, r0
 800140c:	9301      	str	r3, [sp, #4]
 800140e:	e7e7      	b.n	80013e0 <__sflush_r+0xe4>
 8001410:	20400001 	.word	0x20400001

08001414 <_fflush_r>:
 8001414:	690b      	ldr	r3, [r1, #16]
 8001416:	b570      	push	{r4, r5, r6, lr}
 8001418:	0005      	movs	r5, r0
 800141a:	000c      	movs	r4, r1
 800141c:	2b00      	cmp	r3, #0
 800141e:	d102      	bne.n	8001426 <_fflush_r+0x12>
 8001420:	2500      	movs	r5, #0
 8001422:	0028      	movs	r0, r5
 8001424:	bd70      	pop	{r4, r5, r6, pc}
 8001426:	2800      	cmp	r0, #0
 8001428:	d004      	beq.n	8001434 <_fflush_r+0x20>
 800142a:	6983      	ldr	r3, [r0, #24]
 800142c:	2b00      	cmp	r3, #0
 800142e:	d101      	bne.n	8001434 <_fflush_r+0x20>
 8001430:	f7ff f9f2 	bl	8000818 <__sinit>
 8001434:	4b14      	ldr	r3, [pc, #80]	; (8001488 <_fflush_r+0x74>)
 8001436:	429c      	cmp	r4, r3
 8001438:	d11b      	bne.n	8001472 <_fflush_r+0x5e>
 800143a:	686c      	ldr	r4, [r5, #4]
 800143c:	220c      	movs	r2, #12
 800143e:	5ea3      	ldrsh	r3, [r4, r2]
 8001440:	2b00      	cmp	r3, #0
 8001442:	d0ed      	beq.n	8001420 <_fflush_r+0xc>
 8001444:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001446:	07d2      	lsls	r2, r2, #31
 8001448:	d404      	bmi.n	8001454 <_fflush_r+0x40>
 800144a:	059b      	lsls	r3, r3, #22
 800144c:	d402      	bmi.n	8001454 <_fflush_r+0x40>
 800144e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001450:	f7ff fa83 	bl	800095a <__retarget_lock_acquire_recursive>
 8001454:	0028      	movs	r0, r5
 8001456:	0021      	movs	r1, r4
 8001458:	f7ff ff50 	bl	80012fc <__sflush_r>
 800145c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800145e:	0005      	movs	r5, r0
 8001460:	07db      	lsls	r3, r3, #31
 8001462:	d4de      	bmi.n	8001422 <_fflush_r+0xe>
 8001464:	89a3      	ldrh	r3, [r4, #12]
 8001466:	059b      	lsls	r3, r3, #22
 8001468:	d4db      	bmi.n	8001422 <_fflush_r+0xe>
 800146a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800146c:	f7ff fa76 	bl	800095c <__retarget_lock_release_recursive>
 8001470:	e7d7      	b.n	8001422 <_fflush_r+0xe>
 8001472:	4b06      	ldr	r3, [pc, #24]	; (800148c <_fflush_r+0x78>)
 8001474:	429c      	cmp	r4, r3
 8001476:	d101      	bne.n	800147c <_fflush_r+0x68>
 8001478:	68ac      	ldr	r4, [r5, #8]
 800147a:	e7df      	b.n	800143c <_fflush_r+0x28>
 800147c:	4b04      	ldr	r3, [pc, #16]	; (8001490 <_fflush_r+0x7c>)
 800147e:	429c      	cmp	r4, r3
 8001480:	d1dc      	bne.n	800143c <_fflush_r+0x28>
 8001482:	68ec      	ldr	r4, [r5, #12]
 8001484:	e7da      	b.n	800143c <_fflush_r+0x28>
 8001486:	46c0      	nop			; (mov r8, r8)
 8001488:	08001728 	.word	0x08001728
 800148c:	08001748 	.word	0x08001748
 8001490:	08001708 	.word	0x08001708

08001494 <_lseek_r>:
 8001494:	b570      	push	{r4, r5, r6, lr}
 8001496:	0004      	movs	r4, r0
 8001498:	0008      	movs	r0, r1
 800149a:	0011      	movs	r1, r2
 800149c:	001a      	movs	r2, r3
 800149e:	2300      	movs	r3, #0
 80014a0:	4d05      	ldr	r5, [pc, #20]	; (80014b8 <_lseek_r+0x24>)
 80014a2:	602b      	str	r3, [r5, #0]
 80014a4:	f7fe ff77 	bl	8000396 <_lseek>
 80014a8:	1c43      	adds	r3, r0, #1
 80014aa:	d103      	bne.n	80014b4 <_lseek_r+0x20>
 80014ac:	682b      	ldr	r3, [r5, #0]
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d000      	beq.n	80014b4 <_lseek_r+0x20>
 80014b2:	6023      	str	r3, [r4, #0]
 80014b4:	bd70      	pop	{r4, r5, r6, pc}
 80014b6:	46c0      	nop			; (mov r8, r8)
 80014b8:	20000098 	.word	0x20000098

080014bc <__swhatbuf_r>:
 80014bc:	b570      	push	{r4, r5, r6, lr}
 80014be:	000e      	movs	r6, r1
 80014c0:	001d      	movs	r5, r3
 80014c2:	230e      	movs	r3, #14
 80014c4:	5ec9      	ldrsh	r1, [r1, r3]
 80014c6:	0014      	movs	r4, r2
 80014c8:	b096      	sub	sp, #88	; 0x58
 80014ca:	2900      	cmp	r1, #0
 80014cc:	da08      	bge.n	80014e0 <__swhatbuf_r+0x24>
 80014ce:	220c      	movs	r2, #12
 80014d0:	5eb3      	ldrsh	r3, [r6, r2]
 80014d2:	2200      	movs	r2, #0
 80014d4:	602a      	str	r2, [r5, #0]
 80014d6:	061b      	lsls	r3, r3, #24
 80014d8:	d411      	bmi.n	80014fe <__swhatbuf_r+0x42>
 80014da:	2380      	movs	r3, #128	; 0x80
 80014dc:	00db      	lsls	r3, r3, #3
 80014de:	e00f      	b.n	8001500 <__swhatbuf_r+0x44>
 80014e0:	466a      	mov	r2, sp
 80014e2:	f000 f8d1 	bl	8001688 <_fstat_r>
 80014e6:	2800      	cmp	r0, #0
 80014e8:	dbf1      	blt.n	80014ce <__swhatbuf_r+0x12>
 80014ea:	23f0      	movs	r3, #240	; 0xf0
 80014ec:	9901      	ldr	r1, [sp, #4]
 80014ee:	021b      	lsls	r3, r3, #8
 80014f0:	4019      	ands	r1, r3
 80014f2:	4b05      	ldr	r3, [pc, #20]	; (8001508 <__swhatbuf_r+0x4c>)
 80014f4:	18c9      	adds	r1, r1, r3
 80014f6:	424b      	negs	r3, r1
 80014f8:	4159      	adcs	r1, r3
 80014fa:	6029      	str	r1, [r5, #0]
 80014fc:	e7ed      	b.n	80014da <__swhatbuf_r+0x1e>
 80014fe:	2340      	movs	r3, #64	; 0x40
 8001500:	2000      	movs	r0, #0
 8001502:	6023      	str	r3, [r4, #0]
 8001504:	b016      	add	sp, #88	; 0x58
 8001506:	bd70      	pop	{r4, r5, r6, pc}
 8001508:	ffffe000 	.word	0xffffe000

0800150c <__smakebuf_r>:
 800150c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800150e:	2602      	movs	r6, #2
 8001510:	898b      	ldrh	r3, [r1, #12]
 8001512:	0005      	movs	r5, r0
 8001514:	000c      	movs	r4, r1
 8001516:	4233      	tst	r3, r6
 8001518:	d006      	beq.n	8001528 <__smakebuf_r+0x1c>
 800151a:	0023      	movs	r3, r4
 800151c:	3347      	adds	r3, #71	; 0x47
 800151e:	6023      	str	r3, [r4, #0]
 8001520:	6123      	str	r3, [r4, #16]
 8001522:	2301      	movs	r3, #1
 8001524:	6163      	str	r3, [r4, #20]
 8001526:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8001528:	466a      	mov	r2, sp
 800152a:	ab01      	add	r3, sp, #4
 800152c:	f7ff ffc6 	bl	80014bc <__swhatbuf_r>
 8001530:	9900      	ldr	r1, [sp, #0]
 8001532:	0007      	movs	r7, r0
 8001534:	0028      	movs	r0, r5
 8001536:	f7ff fa35 	bl	80009a4 <_malloc_r>
 800153a:	2800      	cmp	r0, #0
 800153c:	d108      	bne.n	8001550 <__smakebuf_r+0x44>
 800153e:	220c      	movs	r2, #12
 8001540:	5ea3      	ldrsh	r3, [r4, r2]
 8001542:	059a      	lsls	r2, r3, #22
 8001544:	d4ef      	bmi.n	8001526 <__smakebuf_r+0x1a>
 8001546:	2203      	movs	r2, #3
 8001548:	4393      	bics	r3, r2
 800154a:	431e      	orrs	r6, r3
 800154c:	81a6      	strh	r6, [r4, #12]
 800154e:	e7e4      	b.n	800151a <__smakebuf_r+0xe>
 8001550:	4b0f      	ldr	r3, [pc, #60]	; (8001590 <__smakebuf_r+0x84>)
 8001552:	62ab      	str	r3, [r5, #40]	; 0x28
 8001554:	2380      	movs	r3, #128	; 0x80
 8001556:	89a2      	ldrh	r2, [r4, #12]
 8001558:	6020      	str	r0, [r4, #0]
 800155a:	4313      	orrs	r3, r2
 800155c:	81a3      	strh	r3, [r4, #12]
 800155e:	9b00      	ldr	r3, [sp, #0]
 8001560:	6120      	str	r0, [r4, #16]
 8001562:	6163      	str	r3, [r4, #20]
 8001564:	9b01      	ldr	r3, [sp, #4]
 8001566:	2b00      	cmp	r3, #0
 8001568:	d00d      	beq.n	8001586 <__smakebuf_r+0x7a>
 800156a:	0028      	movs	r0, r5
 800156c:	230e      	movs	r3, #14
 800156e:	5ee1      	ldrsh	r1, [r4, r3]
 8001570:	f000 f89c 	bl	80016ac <_isatty_r>
 8001574:	2800      	cmp	r0, #0
 8001576:	d006      	beq.n	8001586 <__smakebuf_r+0x7a>
 8001578:	2203      	movs	r2, #3
 800157a:	89a3      	ldrh	r3, [r4, #12]
 800157c:	4393      	bics	r3, r2
 800157e:	001a      	movs	r2, r3
 8001580:	2301      	movs	r3, #1
 8001582:	4313      	orrs	r3, r2
 8001584:	81a3      	strh	r3, [r4, #12]
 8001586:	89a0      	ldrh	r0, [r4, #12]
 8001588:	4307      	orrs	r7, r0
 800158a:	81a7      	strh	r7, [r4, #12]
 800158c:	e7cb      	b.n	8001526 <__smakebuf_r+0x1a>
 800158e:	46c0      	nop			; (mov r8, r8)
 8001590:	0800079d 	.word	0x0800079d

08001594 <memchr>:
 8001594:	b2c9      	uxtb	r1, r1
 8001596:	1882      	adds	r2, r0, r2
 8001598:	4290      	cmp	r0, r2
 800159a:	d101      	bne.n	80015a0 <memchr+0xc>
 800159c:	2000      	movs	r0, #0
 800159e:	4770      	bx	lr
 80015a0:	7803      	ldrb	r3, [r0, #0]
 80015a2:	428b      	cmp	r3, r1
 80015a4:	d0fb      	beq.n	800159e <memchr+0xa>
 80015a6:	3001      	adds	r0, #1
 80015a8:	e7f6      	b.n	8001598 <memchr+0x4>
	...

080015ac <__malloc_lock>:
 80015ac:	b510      	push	{r4, lr}
 80015ae:	4802      	ldr	r0, [pc, #8]	; (80015b8 <__malloc_lock+0xc>)
 80015b0:	f7ff f9d3 	bl	800095a <__retarget_lock_acquire_recursive>
 80015b4:	bd10      	pop	{r4, pc}
 80015b6:	46c0      	nop			; (mov r8, r8)
 80015b8:	2000008c 	.word	0x2000008c

080015bc <__malloc_unlock>:
 80015bc:	b510      	push	{r4, lr}
 80015be:	4802      	ldr	r0, [pc, #8]	; (80015c8 <__malloc_unlock+0xc>)
 80015c0:	f7ff f9cc 	bl	800095c <__retarget_lock_release_recursive>
 80015c4:	bd10      	pop	{r4, pc}
 80015c6:	46c0      	nop			; (mov r8, r8)
 80015c8:	2000008c 	.word	0x2000008c

080015cc <_free_r>:
 80015cc:	b570      	push	{r4, r5, r6, lr}
 80015ce:	0005      	movs	r5, r0
 80015d0:	2900      	cmp	r1, #0
 80015d2:	d010      	beq.n	80015f6 <_free_r+0x2a>
 80015d4:	1f0c      	subs	r4, r1, #4
 80015d6:	6823      	ldr	r3, [r4, #0]
 80015d8:	2b00      	cmp	r3, #0
 80015da:	da00      	bge.n	80015de <_free_r+0x12>
 80015dc:	18e4      	adds	r4, r4, r3
 80015de:	0028      	movs	r0, r5
 80015e0:	f7ff ffe4 	bl	80015ac <__malloc_lock>
 80015e4:	4a1d      	ldr	r2, [pc, #116]	; (800165c <_free_r+0x90>)
 80015e6:	6813      	ldr	r3, [r2, #0]
 80015e8:	2b00      	cmp	r3, #0
 80015ea:	d105      	bne.n	80015f8 <_free_r+0x2c>
 80015ec:	6063      	str	r3, [r4, #4]
 80015ee:	6014      	str	r4, [r2, #0]
 80015f0:	0028      	movs	r0, r5
 80015f2:	f7ff ffe3 	bl	80015bc <__malloc_unlock>
 80015f6:	bd70      	pop	{r4, r5, r6, pc}
 80015f8:	42a3      	cmp	r3, r4
 80015fa:	d908      	bls.n	800160e <_free_r+0x42>
 80015fc:	6821      	ldr	r1, [r4, #0]
 80015fe:	1860      	adds	r0, r4, r1
 8001600:	4283      	cmp	r3, r0
 8001602:	d1f3      	bne.n	80015ec <_free_r+0x20>
 8001604:	6818      	ldr	r0, [r3, #0]
 8001606:	685b      	ldr	r3, [r3, #4]
 8001608:	1841      	adds	r1, r0, r1
 800160a:	6021      	str	r1, [r4, #0]
 800160c:	e7ee      	b.n	80015ec <_free_r+0x20>
 800160e:	001a      	movs	r2, r3
 8001610:	685b      	ldr	r3, [r3, #4]
 8001612:	2b00      	cmp	r3, #0
 8001614:	d001      	beq.n	800161a <_free_r+0x4e>
 8001616:	42a3      	cmp	r3, r4
 8001618:	d9f9      	bls.n	800160e <_free_r+0x42>
 800161a:	6811      	ldr	r1, [r2, #0]
 800161c:	1850      	adds	r0, r2, r1
 800161e:	42a0      	cmp	r0, r4
 8001620:	d10b      	bne.n	800163a <_free_r+0x6e>
 8001622:	6820      	ldr	r0, [r4, #0]
 8001624:	1809      	adds	r1, r1, r0
 8001626:	1850      	adds	r0, r2, r1
 8001628:	6011      	str	r1, [r2, #0]
 800162a:	4283      	cmp	r3, r0
 800162c:	d1e0      	bne.n	80015f0 <_free_r+0x24>
 800162e:	6818      	ldr	r0, [r3, #0]
 8001630:	685b      	ldr	r3, [r3, #4]
 8001632:	1841      	adds	r1, r0, r1
 8001634:	6011      	str	r1, [r2, #0]
 8001636:	6053      	str	r3, [r2, #4]
 8001638:	e7da      	b.n	80015f0 <_free_r+0x24>
 800163a:	42a0      	cmp	r0, r4
 800163c:	d902      	bls.n	8001644 <_free_r+0x78>
 800163e:	230c      	movs	r3, #12
 8001640:	602b      	str	r3, [r5, #0]
 8001642:	e7d5      	b.n	80015f0 <_free_r+0x24>
 8001644:	6821      	ldr	r1, [r4, #0]
 8001646:	1860      	adds	r0, r4, r1
 8001648:	4283      	cmp	r3, r0
 800164a:	d103      	bne.n	8001654 <_free_r+0x88>
 800164c:	6818      	ldr	r0, [r3, #0]
 800164e:	685b      	ldr	r3, [r3, #4]
 8001650:	1841      	adds	r1, r0, r1
 8001652:	6021      	str	r1, [r4, #0]
 8001654:	6063      	str	r3, [r4, #4]
 8001656:	6054      	str	r4, [r2, #4]
 8001658:	e7ca      	b.n	80015f0 <_free_r+0x24>
 800165a:	46c0      	nop			; (mov r8, r8)
 800165c:	20000090 	.word	0x20000090

08001660 <_read_r>:
 8001660:	b570      	push	{r4, r5, r6, lr}
 8001662:	0004      	movs	r4, r0
 8001664:	0008      	movs	r0, r1
 8001666:	0011      	movs	r1, r2
 8001668:	001a      	movs	r2, r3
 800166a:	2300      	movs	r3, #0
 800166c:	4d05      	ldr	r5, [pc, #20]	; (8001684 <_read_r+0x24>)
 800166e:	602b      	str	r3, [r5, #0]
 8001670:	f7fe fe37 	bl	80002e2 <_read>
 8001674:	1c43      	adds	r3, r0, #1
 8001676:	d103      	bne.n	8001680 <_read_r+0x20>
 8001678:	682b      	ldr	r3, [r5, #0]
 800167a:	2b00      	cmp	r3, #0
 800167c:	d000      	beq.n	8001680 <_read_r+0x20>
 800167e:	6023      	str	r3, [r4, #0]
 8001680:	bd70      	pop	{r4, r5, r6, pc}
 8001682:	46c0      	nop			; (mov r8, r8)
 8001684:	20000098 	.word	0x20000098

08001688 <_fstat_r>:
 8001688:	2300      	movs	r3, #0
 800168a:	b570      	push	{r4, r5, r6, lr}
 800168c:	4d06      	ldr	r5, [pc, #24]	; (80016a8 <_fstat_r+0x20>)
 800168e:	0004      	movs	r4, r0
 8001690:	0008      	movs	r0, r1
 8001692:	0011      	movs	r1, r2
 8001694:	602b      	str	r3, [r5, #0]
 8001696:	f7fe fe67 	bl	8000368 <_fstat>
 800169a:	1c43      	adds	r3, r0, #1
 800169c:	d103      	bne.n	80016a6 <_fstat_r+0x1e>
 800169e:	682b      	ldr	r3, [r5, #0]
 80016a0:	2b00      	cmp	r3, #0
 80016a2:	d000      	beq.n	80016a6 <_fstat_r+0x1e>
 80016a4:	6023      	str	r3, [r4, #0]
 80016a6:	bd70      	pop	{r4, r5, r6, pc}
 80016a8:	20000098 	.word	0x20000098

080016ac <_isatty_r>:
 80016ac:	2300      	movs	r3, #0
 80016ae:	b570      	push	{r4, r5, r6, lr}
 80016b0:	4d06      	ldr	r5, [pc, #24]	; (80016cc <_isatty_r+0x20>)
 80016b2:	0004      	movs	r4, r0
 80016b4:	0008      	movs	r0, r1
 80016b6:	602b      	str	r3, [r5, #0]
 80016b8:	f7fe fe64 	bl	8000384 <_isatty>
 80016bc:	1c43      	adds	r3, r0, #1
 80016be:	d103      	bne.n	80016c8 <_isatty_r+0x1c>
 80016c0:	682b      	ldr	r3, [r5, #0]
 80016c2:	2b00      	cmp	r3, #0
 80016c4:	d000      	beq.n	80016c8 <_isatty_r+0x1c>
 80016c6:	6023      	str	r3, [r4, #0]
 80016c8:	bd70      	pop	{r4, r5, r6, pc}
 80016ca:	46c0      	nop			; (mov r8, r8)
 80016cc:	20000098 	.word	0x20000098

080016d0 <_init>:
 80016d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016d2:	46c0      	nop			; (mov r8, r8)
 80016d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016d6:	bc08      	pop	{r3}
 80016d8:	469e      	mov	lr, r3
 80016da:	4770      	bx	lr

080016dc <_fini>:
 80016dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80016de:	46c0      	nop			; (mov r8, r8)
 80016e0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80016e2:	bc08      	pop	{r3}
 80016e4:	469e      	mov	lr, r3
 80016e6:	4770      	bx	lr
